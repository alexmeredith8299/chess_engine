var searchIndex = JSON.parse('{\
"bumpalo":{"doc":"<code>bumpalo</code>","t":[13,3,4,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Alloc","AllocErr","AllocOrInitError","Bump","ChunkIter","ChunkRawIter","Init","alloc","alloc_layout","alloc_slice_clone","alloc_slice_copy","alloc_slice_fill_clone","alloc_slice_fill_copy","alloc_slice_fill_default","alloc_slice_fill_iter","alloc_slice_fill_with","alloc_str","alloc_try_with","alloc_with","allocated_bytes","allocation_limit","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_capacity","clone","clone","clone_into","clone_into","default","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into_iter","into_iter","iter_allocated_chunks","iter_allocated_chunks_raw","new","next","next","reset","set_allocation_limit","to_owned","to_owned","to_string","to_string","try_alloc","try_alloc_layout","try_alloc_try_with","try_alloc_with","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_new","try_with_capacity","type_id","type_id","type_id","type_id","type_id","with_capacity","0","0"],"q":["bumpalo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bumpalo::AllocOrInitError",""],"d":["Indicates that the initial allocation failed.","The <code>AllocErr</code> error indicates an allocation failure that …","An error returned from <code>Bump::try_alloc_try_with</code>.","An arena to bump allocate into.","An iterator over each chunk of allocated memory that an …","An iterator over raw pointers to chunks of allocated …","Indicates that the initializer failed with the contained …","Allocate an object in this <code>Bump</code> and return an exclusive …","Allocate space for an object with the given <code>Layout</code>.","<code>Clone</code> a slice into this <code>Bump</code> and return an exclusive …","<code>Copy</code> a slice into this <code>Bump</code> and return an exclusive …","Allocates a new slice of size <code>len</code> slice into this <code>Bump</code> and …","Allocates a new slice of size <code>len</code> into this <code>Bump</code> and …","Allocates a new slice of size <code>len</code> slice into this <code>Bump</code> and …","Allocates a new slice of size <code>len</code> slice into this <code>Bump</code> and …","Allocates a new slice of size <code>len</code> into this <code>Bump</code> and …","<code>Copy</code> a string slice into this <code>Bump</code> and return an exclusive …","Pre-allocates space for a <code>Result</code> in this <code>Bump</code>, initializes …","Pre-allocate space for an object in this <code>Bump</code>, initializes …","Calculates the number of bytes currently allocated across …","The allocation limit for this arena in bytes.","","","","","","","","","","","Gets the remaining capacity in the current chunk (in …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns an iterator over each chunk of allocated memory …","Returns an iterator over raw pointers to chunks of …","Construct a new arena to bump allocate into.","","","Reset this bump allocator.","Set the allocation limit in bytes for this arena.","","","","","Try to allocate an object in this <code>Bump</code> and return an …","Attempts to allocate space for an object with the given …","Tries to pre-allocates space for a <code>Result</code> in this <code>Bump</code>, …","Tries to pre-allocate space for an object in this <code>Bump</code>, …","","","","","","","","","","","Attempt to construct a new arena to bump allocate into.","Attempt to construct a new arena with the specified byte …","","","","","","Construct a new arena with the specified byte capacity to …","",""],"i":[12,0,0,0,0,0,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,12,1,19,20,10,12,1,19,20,1,10,12,10,12,1,1,10,12,10,10,12,12,1,19,20,10,12,12,1,19,20,10,12,1,19,20,19,20,1,1,1,19,20,1,1,10,12,10,12,1,1,1,1,10,12,1,19,20,10,12,1,19,20,1,1,10,12,1,19,20,1,23,24],"f":[0,0,0,0,0,0,0,[1],[[1,2],[[4,[3]]]],[1],[1],[[1,5]],[[1,5,6]],[[1,5]],[1],[[1,5]],[[1,7],7],[1,8],[1],[1,5],[1,[[9,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,5],[10,10],[[[12,[11]]],[[12,[11]]]],[[]],[[]],[[],1],[1],[[10,10],13],[[[12,[14]],12],13],[[10,15],16],[[10,15],16],[[[12,[17]],15],16],[[[12,[18]],15],16],[[1,15],16],[[19,15],16],[[20,15],16],[[]],[10,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,19],[1,20],[[],1],[19,9],[20,9],[1],[[1,[9,[5]]]],[[]],[[]],[[],21],[[],21],[1,[[8,[10]]]],[[1,2],[[8,[[4,[3]],10]]]],[1,[[8,[12]]]],[1,[[8,[10]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[1,10]]]],[5,[[8,[1,10]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[5,1],0,0],"p":[[3,"Bump"],[3,"Layout"],[15,"u8"],[3,"NonNull"],[15,"usize"],[8,"Copy"],[15,"str"],[4,"Result"],[4,"Option"],[3,"AllocErr"],[8,"Clone"],[4,"AllocOrInitError"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Display"],[3,"ChunkIter"],[3,"ChunkRawIter"],[3,"String"],[3,"TypeId"],[13,"Alloc"],[13,"Init"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"p":[]},\
"chess_engine":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ChessGame","borrow","borrow_mut","check_if_legal","describe","from","from_abi","get_legal_moves_for_highlighting","into","into_abi","is_none","make_move","new","none","ref_from_abi","ref_mut_from_abi","return_abi","try_from","try_into","type_id","update"],"q":["chess_engine","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[[1,2,2,2,2],3],[[]],[[]],[4,1],[[1,2,2,2],5],[[]],[1,4],[[],3],[[1,2],6],[[],1],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],8],[[1,2,2,2,2],6]],"p":[[3,"ChessGame"],[15,"str"],[15,"bool"],[15,"u32"],[3,"Array"],[3,"String"],[4,"Result"],[3,"TypeId"]]},\
"console_error_panic_hook":{"doc":"<code>console_error_panic_hook</code>","t":[5,5],"n":["hook","set_once"],"q":["console_error_panic_hook",""],"d":["A panic hook for use with <code>std::panic::set_hook</code> that logs …","Set the <code>console.error</code> panic hook the first time this is …"],"i":[0,0],"f":[[1],[[]]],"p":[[3,"PanicInfo"]]},\
"js_sys":{"doc":"Bindings to JavaScript’s standard, built-in objects, …","t":[3,3,3,3,0,3,3,3,3,3,3,18,3,3,3,3,3,3,3,3,3,0,3,3,3,3,0,3,18,18,18,18,3,0,18,18,3,3,18,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11],"n":["Array","ArrayBuffer","ArrayIter","AsyncIterator","Atomics","BigInt","BigInt64Array","BigUint64Array","Boolean","DataView","Date","EPSILON","Error","EvalError","Float32Array","Float64Array","Function","Generator","Int16Array","Int32Array","Int8Array","Intl","IntoIter","Iter","Iterator","IteratorNext","JSON","JsString","MAX_SAFE_INTEGER","MAX_VALUE","MIN_SAFE_INTEGER","MIN_VALUE","Map","Math","NAN","NEGATIVE_INFINITY","Number","Object","POSITIVE_INFINITY","Promise","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","SharedArrayBuffer","Symbol","SyntaxError","TypeError","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray","UriError","WeakMap","WeakSet","WebAssembly","add","add","add","add","add","add","add","add","add","add","all","all_settled","any","apply","as_char","as_int_n","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_uint_n","assign","assign2","assign3","async_iterator","at","at","at","at","at","at","at","at","at","at","at","at","at","bind","bind0","bind1","bind2","bind3","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","buffer","buffer","buffer","buffer","buffer","buffer","buffer","buffer","buffer","byte_length","byte_length","byte_length","byte_length","byte_length","byte_length","byte_length","byte_length","byte_length","byte_length","byte_length","byte_length","byte_length","byte_length","byte_offset","byte_offset","byte_offset","byte_offset","byte_offset","byte_offset","byte_offset","byte_offset","byte_offset","byte_offset","byte_offset","byte_offset","call0","call1","call2","call3","catch","cause","char_at","char_code_at","checked_div","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","code_point_at","concat","concat","constructor","copy_from","copy_from","copy_from","copy_from","copy_from","copy_from","copy_from","copy_from","copy_from","copy_from","copy_from","copy_to","copy_to","copy_to","copy_to","copy_to","copy_to","copy_to","copy_to","copy_to","copy_to","copy_to","copy_within","create","decode_uri","decode_uri_component","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","define_properties","define_property","delete","delete","delete","delete","delete","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","describe","div","div","div","div","div","div","div","div","done","encode_uri","encode_uri_component","ends_with","entries","entries","entries","entries","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","escape","eval","every","exec","extend","fill","fill","fill","fill","fill","fill","fill","fill","fill","fill","fill","fill","filter","finally","find","find_index","flags","flat","flat_map","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_","for_each","for_each","for_each","for_each","for_each","for_each","for_each","for_each","for_each","for_each","for_each","for_each","for_each","for_each","freeze","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_char_code","from_char_code1","from_char_code2","from_char_code3","from_char_code4","from_char_code5","from_code_point","from_code_point1","from_code_point2","from_code_point3","from_code_point4","from_code_point5","from_entries","from_iter","from_str","from_str","from_str","ge","ge","ge","ge","get","get","get","get_date","get_day","get_float32","get_float32_endian","get_float64","get_float64_endian","get_full_year","get_hours","get_index","get_index","get_index","get_index","get_index","get_index","get_index","get_index","get_index","get_index","get_index","get_int16","get_int16_endian","get_int32","get_int32_endian","get_int8","get_milliseconds","get_minutes","get_month","get_own_property_descriptor","get_own_property_descriptors","get_own_property_names","get_own_property_symbols","get_prototype_of","get_seconds","get_time","get_timezone_offset","get_uint16","get_uint16_endian","get_uint32","get_uint32_endian","get_uint8","get_utc_date","get_utc_day","get_utc_full_year","get_utc_hours","get_utc_milliseconds","get_utc_minutes","get_utc_month","get_utc_seconds","global","global","gt","gt","gt","gt","has","has","has","has","has_instance","has_own","has_own_property","ignore_case","includes","includes","index_of","index_of","input","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_iter","into_iter","into_iter","into_iter","into_iter","is","is_array","is_concat_spreadable","is_extensible","is_finite","is_finite","is_frozen","is_integer","is_nan","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_prototype_of","is_safe_integer","is_sealed","is_type_of","is_type_of","is_type_of","is_type_of","is_type_of","is_type_of","is_type_of","is_type_of","is_type_of","is_valid_utf16","is_view","iter","iter","iterator","join","key_for","keys","keys","keys","keys","last_index","last_index_of","last_index_of","last_match","last_paren","le","le","le","le","left_context","length","length","length","length","length","length","length","length","length","length","length","length","length","length","locale_compare","lt","lt","lt","lt","map","match_","match_","match_all","message","mul","mul","mul","mul","mul","mul","mul","mul","multiline","n1","n2","n3","n4","n5","n6","n7","n8","n9","name","name","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_0","new_no_args","new_regexp","new_with_args","new_with_byte_offset","new_with_byte_offset","new_with_byte_offset","new_with_byte_offset","new_with_byte_offset","new_with_byte_offset","new_with_byte_offset","new_with_byte_offset","new_with_byte_offset","new_with_byte_offset","new_with_byte_offset","new_with_byte_offset_and_length","new_with_byte_offset_and_length","new_with_byte_offset_and_length","new_with_byte_offset_and_length","new_with_byte_offset_and_length","new_with_byte_offset_and_length","new_with_byte_offset_and_length","new_with_byte_offset_and_length","new_with_byte_offset_and_length","new_with_byte_offset_and_length","new_with_byte_offset_and_length","new_with_length","new_with_length","new_with_length","new_with_length","new_with_length","new_with_length","new_with_length","new_with_length","new_with_length","new_with_length","new_with_length","new_with_length","new_with_options","new_with_year_month","new_with_year_month_day","new_with_year_month_day_hr","new_with_year_month_day_hr_min","new_with_year_month_day_hr_min_sec","new_with_year_month_day_hr_min_sec_milli","next","next","next","next","next","next","next_back","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","normalize","not","not","not","not","not","not","now","of1","of2","of3","of4","of5","pad_end","pad_start","parse","parse_float","parse_float","parse_int","parse_int","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","pow","pow","prevent_extensions","product","product","product","product","property_is_enumerable","push","race","raw","raw_0","raw_1","raw_2","raw_3","raw_4","raw_5","raw_6","raw_7","raw_copy_to_ptr","raw_copy_to_ptr","raw_copy_to_ptr","raw_copy_to_ptr","raw_copy_to_ptr","raw_copy_to_ptr","raw_copy_to_ptr","raw_copy_to_ptr","raw_copy_to_ptr","raw_copy_to_ptr","raw_copy_to_ptr","reduce","reduce_right","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","reject","rem","rem","rem","rem","rem","rem","rem","rem","repeat","replace","replace","replace_all","replace_all_by_pattern","replace_all_by_pattern_with_function","replace_all_with_function","replace_by_pattern","replace_by_pattern_with_function","replace_with_function","resolve","return_","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","reverse","revocable","right_context","seal","search","search","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_cause","set_date","set_float32","set_float32_endian","set_float64","set_float64_endian","set_full_year","set_full_year_with_month","set_full_year_with_month_date","set_hours","set_index","set_index","set_index","set_index","set_index","set_index","set_index","set_index","set_index","set_index","set_index","set_int16","set_int16_endian","set_int32","set_int32_endian","set_int8","set_last_index","set_message","set_milliseconds","set_minutes","set_month","set_name","set_prototype_of","set_seconds","set_time","set_uint16","set_uint16_endian","set_uint32","set_uint32_endian","set_uint8","set_utc_date","set_utc_full_year","set_utc_full_year_with_month","set_utc_full_year_with_month_date","set_utc_hours","set_utc_milliseconds","set_utc_minutes","set_utc_month","set_utc_seconds","shift","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","size","size","size_hint","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice","slice_with_end","slice_with_end","some","sort","source","species","splice","split","split","split_by_pattern","split_by_pattern_limit","split_limit","starts_with","sticky","sub","sub","sub","sub","sub","sub","sub","sub","subarray","subarray","subarray","subarray","subarray","subarray","subarray","subarray","subarray","subarray","subarray","substr","substring","sum","sum","sum","sum","test","then","then2","throw","to_date_string","to_exponential","to_fixed","to_iso_string","to_json","to_locale_date_string","to_locale_lower_case","to_locale_string","to_locale_string","to_locale_string","to_locale_string","to_locale_string","to_locale_time_string","to_locale_upper_case","to_lower_case","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_precision","to_primitive","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string_tag","to_time_string","to_upper_case","to_utc_string","to_vec","to_vec","to_vec","to_vec","to_vec","to_vec","to_vec","to_vec","to_vec","to_vec","to_vec","to_vec","trim","trim_end","trim_left","trim_right","trim_start","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_iter","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unescape","unicode","unscopables","unshift","unsigned_shr","utc","value","value_of","value_of","value_of","value_of","value_of","value_of","value_of","values","values","values","values","view","view","view","view","view","view","view","view","view","view","view","view_mut_raw","view_mut_raw","view_mut_raw","view_mut_raw","view_mut_raw","view_mut_raw","view_mut_raw","view_mut_raw","view_mut_raw","view_mut_raw","view_mut_raw","add","and","compare_exchange","exchange","is_lock_free","load","notify","notify_with_count","or","store","sub","wait","wait_with_timeout","xor","Collator","DateTimeFormat","NumberFormat","PluralRules","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compare","default","default","default","default","deref","deref","deref","deref","describe","describe","describe","describe","fmt","fmt","fmt","fmt","format","format","format_to_parts","format_to_parts","from","from","from","from","from","from","from","from","from_abi","from_abi","from_abi","from_abi","get_canonical_locales","instanceof","instanceof","instanceof","instanceof","into","into","into","into","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","is_none","is_none","is_none","is_none","new","new","new","new","none","none","none","none","none","none","none","none","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","resolved_options","resolved_options","resolved_options","resolved_options","return_abi","return_abi","return_abi","return_abi","select","supported_locales_of","supported_locales_of","supported_locales_of","supported_locales_of","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","parse","stringify","stringify_with_replacer","stringify_with_replacer_and_space","abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log","log10","log1p","log2","max","min","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","apply","construct","construct_with_new_target","define_property","delete_property","get","get_f64","get_own_property_descriptor","get_prototype_of","get_u32","has","is_extensible","own_keys","prevent_extensions","set","set_f64","set_prototype_of","set_u32","set_with_receiver","CompileError","Global","Instance","LinkError","Memory","Module","RuntimeError","Table","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compile","compile_streaming","custom_sections","deref","deref","deref","deref","deref","deref","deref","deref","describe","describe","describe","describe","describe","describe","describe","describe","eq","eq","eq","eq","eq","eq","eq","eq","exports","exports","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","from_abi","get","grow","grow","imports","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instanceof","instantiate_buffer","instantiate_module","instantiate_streaming","into","into","into","into","into","into","into","into","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","into_abi","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","length","new","new","new","new","new","new","new","new","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","ref_from_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","return_abi","set","set_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_from_js_ref","validate","value"],"q":["js_sysjs_sys::Atomics","","","","","","","","","","","","","","js_sys::Intl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","js_sys::JSON","","","","js_sys::Math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","js_sys::Reflect","","","","","","","","","","","","","","","","","","","js_sys::WebAssemblyd":["","","Iterator returned by <code>Array::iter</code>","Any object that conforms to the JS async iterator …","The <code>Atomics</code> object provides atomic operations as static …","","","","","","","The smallest interval between two representable numbers.","","","","","","","","","","","An iterator over the JS <code>Symbol.iterator</code> iteration protocol.","An iterator over the JS <code>Symbol.iterator</code> iteration protocol.","Any object that conforms to the JS iterator protocol. For …","The result of calling <code>next()</code> on a JS iterator.","The <code>JSON</code> object contains methods for parsing JavaScript …","","The maximum safe integer in JavaScript (2^53 - 1).","The largest positive representable number.","The minimum safe integer in JavaScript (-(2^53 - 1)).","The smallest positive representable number—that is, the …","","","Special “Not a Number” value.","Special value representing negative infinity. Returned on …","","","Special value representing infinity. Returned on overflow.","The <code>Promise</code> object represents the eventual completion (or …","","The <code>RangeError</code> object indicates an error when a value is …","The <code>ReferenceError</code> object represents an error when a …","","","","","","A <code>SyntaxError</code> is thrown when the JavaScript engine …","The <code>TypeError</code> object represents an error when a value is …","","","","","The <code>URIError</code> object represents an error when a global URI …","","","","","","","","","","","","The <code>add()</code> method appends a new element with a specified …","The <code>add()</code> method appends a new object to the end of a …","The <code>Promise.all(iterable)</code> method returns a single <code>Promise</code> …","The <code>Promise.allSettled(iterable)</code> method returns a single …","The <code>Promise.any(iterable)</code> method returns a single <code>Promise</code> …","The <code>apply()</code> method calls a function with a given this …","If this string consists of a single Unicode code point, …","Clamps a BigInt value to a signed integer value, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clamps a BigInt value to an unsigned integer value, and …","The <code>Object.assign()</code> method is used to copy the values of …","The <code>Object.assign()</code> method is used to copy the values of …","The <code>Object.assign()</code> method is used to copy the values of …","The <code>Symbol.asyncIterator</code> well-known symbol specifies the …","Retrieves the element at the index, counting from the end …","The ‘at()’ method returns a new string consisting of …","Gets the value at <code>idx</code>, counting from the end if negative.","Gets the value at <code>idx</code>, counting from the end if negative.","Gets the value at <code>idx</code>, counting from the end if negative.","Gets the value at <code>idx</code>, counting from the end if negative.","Gets the value at <code>idx</code>, counting from the end if negative.","Gets the value at <code>idx</code>, counting from the end if negative.","Gets the value at <code>idx</code>, counting from the end if negative.","Gets the value at <code>idx</code>, counting from the end if negative.","Gets the value at <code>idx</code>, counting from the end if negative.","Gets the value at <code>idx</code>, counting from the end if negative.","Gets the value at <code>idx</code>, counting from the end if negative.","The <code>bind()</code> method creates a new function that, when …","The <code>bind()</code> method creates a new function that, when …","The <code>bind()</code> method creates a new function that, when …","The <code>bind()</code> method creates a new function that, when …","The <code>bind()</code> method creates a new function that, when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ArrayBuffer referenced by this view. Fixed at …","The buffer accessor property represents the <code>ArrayBuffer</code> …","The buffer accessor property represents the <code>ArrayBuffer</code> …","The buffer accessor property represents the <code>ArrayBuffer</code> …","The buffer accessor property represents the <code>ArrayBuffer</code> …","The buffer accessor property represents the <code>ArrayBuffer</code> …","The buffer accessor property represents the <code>ArrayBuffer</code> …","The buffer accessor property represents the <code>ArrayBuffer</code> …","The buffer accessor property represents the <code>ArrayBuffer</code> …","The buffer accessor property represents the <code>ArrayBuffer</code> …","The buffer accessor property represents the <code>ArrayBuffer</code> …","The buffer accessor property represents the <code>ArrayBuffer</code> …","The byteLength property of an object which is an instance …","The byteLength accessor property represents the length of …","The length (in bytes) of this view from the start of its …","The byteLength accessor property represents the length (in …","The byteLength accessor property represents the length (in …","The byteLength accessor property represents the length (in …","The byteLength accessor property represents the length (in …","The byteLength accessor property represents the length (in …","The byteLength accessor property represents the length (in …","The byteLength accessor property represents the length (in …","The byteLength accessor property represents the length (in …","The byteLength accessor property represents the length (in …","The byteLength accessor property represents the length (in …","The byteLength accessor property represents the length (in …","The offset (in bytes) of this view from the start of its …","The byteOffset accessor property represents the offset (in …","The byteOffset accessor property represents the offset (in …","The byteOffset accessor property represents the offset (in …","The byteOffset accessor property represents the offset (in …","The byteOffset accessor property represents the offset (in …","The byteOffset accessor property represents the offset (in …","The byteOffset accessor property represents the offset (in …","The byteOffset accessor property represents the offset (in …","The byteOffset accessor property represents the offset (in …","The byteOffset accessor property represents the offset (in …","The byteOffset accessor property represents the offset (in …","The <code>call()</code> method calls a function with a given this value …","The <code>call()</code> method calls a function with a given this value …","The <code>call()</code> method calls a function with a given this value …","The <code>call()</code> method calls a function with a given this value …","The <code>catch()</code> method returns a <code>Promise</code> and deals with …","The cause property is the underlying cause of the error. …","The String object’s <code>charAt()</code> method returns a new string …","The <code>charCodeAt()</code> method returns an integer between 0 and …","Applies the binary <code>/</code> JS operator on two <code>BigInt</code>s, catching …","The <code>clear()</code> method removes all elements from a Map object.","The <code>clear()</code> method removes all elements from a <code>Set</code> object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>codePointAt()</code> method returns a non-negative integer …","The <code>concat()</code> method is used to merge two or more arrays. …","The <code>concat()</code> method concatenates the string arguments to …","The constructor property returns a reference to the <code>Object</code> …","Copy the contents of the source Rust slice into this JS …","Copy the contents of the source Rust slice into this JS …","Copy the contents of the source Rust slice into this JS …","Copy the contents of the source Rust slice into this JS …","Copy the contents of the source Rust slice into this JS …","Copy the contents of the source Rust slice into this JS …","Copy the contents of the source Rust slice into this JS …","Copy the contents of the source Rust slice into this JS …","Copy the contents of the source Rust slice into this JS …","Copy the contents of the source Rust slice into this JS …","Copy the contents of the source Rust slice into this JS …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","The <code>copyWithin()</code> method shallow copies part of an array to …","The <code>Object.create()</code> method creates a new object, using an …","The <code>decodeURI()</code> function decodes a Uniform Resource …","The <code>decodeURIComponent()</code> function decodes a Uniform …","","","","","","","","","","","","","","","","","","","","","","The <code>Object.defineProperties()</code> method defines new or …","The static method <code>Object.defineProperty()</code> defines a new …","Deletes the element at the index (does nothing if the …","The <code>delete()</code> method removes the specified element from a …","The <code>delete()</code> method removes the specified element from a …","The <code>delete()</code> method removes the specified element from a …","The <code>delete()</code> method removes the specified element from a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Has the value <code>true</code> if the iterator is past the end of the …","The <code>encodeURI()</code> function encodes a Uniform Resource …","The <code>encodeURIComponent()</code> function encodes a Uniform …","The <code>endsWith()</code> method determines whether a string ends …","The <code>entries()</code> method returns a new Array Iterator object …","The <code>entries()</code> method returns a new Iterator object that …","The <code>Object.entries()</code> method returns an array of a given …","The <code>entries()</code> method returns a new Iterator object that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>escape()</code> function computes a new string in which …","The <code>eval()</code> function evaluates JavaScript code represented …","The <code>every()</code> method tests whether all elements in the array …","The <code>exec()</code> method executes a search for a match in a …","","The <code>fill()</code> method fills all the elements of an array from …","The <code>fill()</code> method fills all the elements of an array from …","The <code>fill()</code> method fills all the elements of an array from …","The <code>fill()</code> method fills all the elements of an array from …","The <code>fill()</code> method fills all the elements of an array from …","The <code>fill()</code> method fills all the elements of an array from …","The <code>fill()</code> method fills all the elements of an array from …","The <code>fill()</code> method fills all the elements of an array from …","The <code>fill()</code> method fills all the elements of an array from …","The <code>fill()</code> method fills all the elements of an array from …","The <code>fill()</code> method fills all the elements of an array from …","The <code>fill()</code> method fills all the elements of an array from …","The <code>filter()</code> method creates a new array with all elements …","The <code>finally()</code> method returns a <code>Promise</code>. When the promise …","The <code>find()</code> method returns the value of the first element …","The <code>findIndex()</code> method returns the index of the first …","The flags property returns a string consisting of the …","The <code>flat()</code> method creates a new array with all sub-array …","The <code>flatMap()</code> method first maps each element using a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Symbol.for(key)</code> method searches for existing symbols …","The <code>forEach()</code> method executes a provided function once for …","The <code>forEach()</code> method executes a provided function once per …","The <code>forEach()</code> method executes a provided function once for …","The <code>forEach()</code> method executes a provided function once per …","The <code>forEach()</code> method executes a provided function once per …","The <code>forEach()</code> method executes a provided function once per …","The <code>forEach()</code> method executes a provided function once per …","The <code>forEach()</code> method executes a provided function once per …","The <code>forEach()</code> method executes a provided function once per …","The <code>forEach()</code> method executes a provided function once per …","The <code>forEach()</code> method executes a provided function once per …","The <code>forEach()</code> method executes a provided function once per …","The <code>forEach()</code> method executes a provided function once per …","The <code>forEach()</code> method executes a provided function once per …","The <code>Object.freeze()</code> method freezes an object: that is, …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","The <code>Array.from()</code> method creates a new, shallow-copied <code>Array</code>…","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The static <code>String.fromCharCode()</code> method returns a string …","MDN documentation","MDN documentation","MDN documentation","MDN documentation","MDN documentation","The static <code>String.fromCodePoint()</code> method returns a string …","MDN documentation","MDN documentation","MDN documentation","MDN documentation","MDN documentation","The <code>Object.fromEntries()</code> method transforms a list of …","","","","","","","","","Retrieves the element at the index (returns <code>undefined</code> if …","The <code>get()</code> method returns a specified element from a Map …","The <code>get()</code> method returns a specified by key element from a …","The <code>getDate()</code> method returns the day of the month for the …","The <code>getDay()</code> method returns the day of the week for the …","The <code>getFloat32()</code> method gets a signed 32-bit float (float) …","The <code>getFloat32()</code> method gets a signed 32-bit float (float) …","The <code>getFloat64()</code> method gets a signed 64-bit float …","The <code>getFloat64()</code> method gets a signed 64-bit float …","The <code>getFullYear()</code> method returns the year of the specified …","The <code>getHours()</code> method returns the hour for the specified …","Gets the value at <code>idx</code>, equivalent to the javascript …","Gets the value at <code>idx</code>, equivalent to the javascript …","Gets the value at <code>idx</code>, equivalent to the javascript …","Gets the value at <code>idx</code>, equivalent to the javascript …","Gets the value at <code>idx</code>, equivalent to the javascript …","Gets the value at <code>idx</code>, equivalent to the javascript …","Gets the value at <code>idx</code>, equivalent to the javascript …","Gets the value at <code>idx</code>, equivalent to the javascript …","Gets the value at <code>idx</code>, equivalent to the javascript …","Gets the value at <code>idx</code>, equivalent to the javascript …","Gets the value at <code>idx</code>, equivalent to the javascript …","The <code>getInt16()</code> method gets a signed 16-bit integer (short) …","The <code>getInt16()</code> method gets a signed 16-bit integer (short) …","The <code>getInt32()</code> method gets a signed 32-bit integer (long) …","The <code>getInt32()</code> method gets a signed 32-bit integer (long) …","The <code>getInt8()</code> method gets a signed 8-bit integer (byte) at …","The <code>getMilliseconds()</code> method returns the milliseconds in …","The <code>getMinutes()</code> method returns the minutes in the …","The <code>getMonth()</code> method returns the month in the specified …","The <code>Object.getOwnPropertyDescriptor()</code> method returns a …","The <code>Object.getOwnPropertyDescriptors()</code> method returns all …","The <code>Object.getOwnPropertyNames()</code> method returns an array of","The <code>Object.getOwnPropertySymbols()</code> method returns an array …","The <code>Object.getPrototypeOf()</code> method returns the prototype …","The <code>getSeconds()</code> method returns the seconds in the …","The <code>getTime()</code> method returns the numeric value …","The <code>getTimezoneOffset()</code> method returns the time zone …","The <code>getUint16()</code> method gets an unsigned 16-bit integer …","The <code>getUint16()</code> method gets an unsigned 16-bit integer …","The <code>getUint32()</code> method gets an unsigned 32-bit integer …","The <code>getUint32()</code> method gets an unsigned 32-bit integer …","The <code>getUint8()</code> method gets a unsigned 8-bit integer (byte) …","The <code>getUTCDate()</code> method returns the day (date) of the …","The <code>getUTCDay()</code> method returns the day of the week in the …","The <code>getUTCFullYear()</code> method returns the year in the …","The <code>getUTCHours()</code> method returns the hours in the …","The <code>getUTCMilliseconds()</code> method returns the milliseconds …","The <code>getUTCMinutes()</code> method returns the minutes in the …","The <code>getUTCMonth()</code> returns the month of the specified date …","The <code>getUTCSeconds()</code> method returns the seconds in the …","Returns a handle to the global scope object.","The global property indicates whether or not the “g” …","","","","","The <code>has()</code> method returns a boolean indicating whether an …","The <code>has()</code> method returns a boolean indicating whether an …","The <code>has()</code> method returns a boolean indicating whether an …","The <code>has()</code> method returns a boolean indicating whether an …","The <code>Symbol.hasInstance</code> well-known symbol is used to …","The <code>Object.hasOwn()</code> method returns a boolean indicating …","The <code>hasOwnProperty()</code> method returns a boolean indicating …","The ignoreCase property indicates whether or not the “i…","The <code>includes()</code> method determines whether an array includes …","The <code>includes()</code> method determines whether one string may be …","The <code>indexOf()</code> method returns the first index at which a …","The <code>indexOf()</code> method returns the index within the calling …","The non-standard input property is a static property of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Object.is()</code> method determines whether two values are …","The <code>Array.isArray()</code> method determines whether the passed …","The <code>Symbol.isConcatSpreadable</code> well-known symbol is used to …","The <code>Object.isExtensible()</code> method determines if an object …","The global <code>isFinite()</code> function determines whether the …","The <code>Number.isFinite()</code> method determines whether the passed …","The <code>Object.isFrozen()</code> determines if an object is frozen.","The <code>Number.isInteger()</code> method determines whether the …","The <code>Number.isNaN()</code> method determines whether the passed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>isPrototypeOf()</code> method checks if an object exists in …","The <code>Number.isSafeInteger()</code> method determines whether the …","The <code>Object.isSealed()</code> method determines if an object is …","","","","","","","","","","Returns whether this string is a valid UTF-16 string.","The <code>isView()</code> method returns true if arg is one of the …","Returns an iterator over the values of the JS array.","Returns an iterator over the <code>u16</code> character codes that make …","The <code>Symbol.iterator</code> well-known symbol specifies the …","The <code>join()</code> method joins all elements of an array (or an …","The <code>Symbol.keyFor(sym)</code> method retrieves a shared symbol …","The <code>keys()</code> method returns a new Array Iterator object that …","The <code>keys()</code> method returns a new Iterator object that …","The <code>Object.keys()</code> method returns an array of a given object…","The <code>keys()</code> method is an alias for this method (for …","The lastIndex is a read/write integer property of regular …","The <code>lastIndexOf()</code> method returns the last index at which a …","The <code>lastIndexOf()</code> method returns the index within the …","The non-standard lastMatch property is a static and …","The non-standard lastParen property is a static and …","","","","","The non-standard leftContext property is a static and …","The length property of an object which is an instance of …","The length property indicates the number of arguments …","The length property of a String object indicates the …","The length accessor property represents the length (in …","The length accessor property represents the length (in …","The length accessor property represents the length (in …","The length accessor property represents the length (in …","The length accessor property represents the length (in …","The length accessor property represents the length (in …","The length accessor property represents the length (in …","The length accessor property represents the length (in …","The length accessor property represents the length (in …","The length accessor property represents the length (in …","The length accessor property represents the length (in …","The <code>localeCompare()</code> method returns a number indicating …","","","","","<code>map()</code> calls a provided callback function once for each …","The <code>match()</code> method retrieves the matches when matching a …","The <code>Symbol.match</code> well-known symbol specifies the matching …","The <code>match_all()</code> method is similar to <code>match()</code>, but gives an …","The message property is a human-readable description of …","","","","","","","","","The multiline property indicates whether or not the “m”…","The non-standard $1, $2, $3, $4, $5, $6, $7, $8, $9 …","","","","","","","","","The name property represents a name for the type of error. …","A Function object’s read-only name property indicates …","","","","","Creates a new empty array.","The <code>ArrayBuffer</code> object is used to represent a generic, …","The <code>SharedArrayBuffer</code> object is used to represent a …","Creates a new BigInt value.","The <code>Boolean()</code> constructor creates an object wrapper for a …","The <code>DataView</code> view provides a low-level interface for …","The Error constructor creates an error object. Instances …","The EvalError object indicates an error regarding the …","The Map object holds key-value pairs. Any value (both …","The <code>Number</code> JavaScript object is a wrapper object allowing …","Creates a JavaScript <code>Date</code> instance that represents a …","The <code>Object</code> constructor creates an object wrapper.","The <code>Proxy</code> object is used to define custom behavior for …","The <code>RangeError</code> object indicates an error when a value is …","The <code>ReferenceError</code> object represents an error when a …","The <code>RegExp</code> constructor creates a regular expression object …","The <code>Set</code> object lets you store unique values of any type, …","A <code>SyntaxError</code> is thrown when the JavaScript engine …","The <code>TypeError</code> object represents an error when a value is …","The <code>URIError</code> object represents an error when a global URI …","The <code>WeakMap</code> object is a collection of key/value pairs in …","The <code>WeakSet</code> object lets you store weakly held objects in a …","Creates a new <code>Promise</code> with the provided executor <code>cb</code>","The <code>Int8Array()</code> constructor creates a new array.","The <code>Int16Array()</code> constructor creates a new array.","The <code>Int32Array()</code> constructor creates a new array.","The <code>Uint8Array()</code> constructor creates a new array.","The <code>Uint8ClampedArray()</code> constructor creates a new array.","The <code>Uint16Array()</code> constructor creates a new array.","The <code>Uint32Array()</code> constructor creates a new array.","The <code>Float32Array()</code> constructor creates a new array.","The <code>Float64Array()</code> constructor creates a new array.","The <code>BigInt64Array()</code> constructor creates a new array.","The <code>BigUint64Array()</code> constructor creates a new array.","Creates a JavaScript <code>Date</code> instance that represents the …","The <code>Function</code> constructor creates a new <code>Function</code> object. …","","The <code>Function</code> constructor creates a new <code>Function</code> object. …","An <code>Int8Array()</code> which creates an array with the given …","An <code>Int16Array()</code> which creates an array with the given …","An <code>Int32Array()</code> which creates an array with the given …","An <code>Uint8Array()</code> which creates an array with the given …","An <code>Uint8ClampedArray()</code> which creates an array with the …","An <code>Uint16Array()</code> which creates an array with the given …","An <code>Uint32Array()</code> which creates an array with the given …","An <code>Float32Array()</code> which creates an array with the given …","An <code>Float64Array()</code> which creates an array with the given …","An <code>BigInt64Array()</code> which creates an array with the given …","An <code>BigUint64Array()</code> which creates an array with the given …","An <code>Int8Array()</code> which creates an array with the given …","An <code>Int16Array()</code> which creates an array with the given …","An <code>Int32Array()</code> which creates an array with the given …","An <code>Uint8Array()</code> which creates an array with the given …","An <code>Uint8ClampedArray()</code> which creates an array with the …","An <code>Uint16Array()</code> which creates an array with the given …","An <code>Uint32Array()</code> which creates an array with the given …","An <code>Float32Array()</code> which creates an array with the given …","An <code>Float64Array()</code> which creates an array with the given …","An <code>BigInt64Array()</code> which creates an array with the given …","An <code>BigUint64Array()</code> which creates an array with the given …","Creates a new array with the specified length (elements …","An <code>Int8Array()</code> which creates an array with an internal …","An <code>Int16Array()</code> which creates an array with an internal …","An <code>Int32Array()</code> which creates an array with an internal …","An <code>Uint8Array()</code> which creates an array with an internal …","An <code>Uint8ClampedArray()</code> which creates an array with an …","An <code>Uint16Array()</code> which creates an array with an internal …","An <code>Uint32Array()</code> which creates an array with an internal …","An <code>Float32Array()</code> which creates an array with an internal …","An <code>Float64Array()</code> which creates an array with an internal …","An <code>BigInt64Array()</code> which creates an array with an internal …","An <code>BigUint64Array()</code> which creates an array with an …","","Creates a JavaScript <code>Date</code> instance that represents a …","Creates a JavaScript <code>Date</code> instance that represents a …","Creates a JavaScript <code>Date</code> instance that represents a …","Creates a JavaScript <code>Date</code> instance that represents a …","Creates a JavaScript <code>Date</code> instance that represents a …","Creates a JavaScript <code>Date</code> instance that represents a …","","","","The <code>next()</code> method returns an object with two properties …","The <code>next()</code> method always has to return an object with …","The <code>next()</code> method always has to return a Promise which …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>normalize()</code> method returns the Unicode Normalization …","","","","","","","The <code>Date.now()</code> method returns the number of milliseconds …","The <code>Array.of()</code> method creates a new Array instance with a …","MDN documentation","MDN documentation","MDN documentation","MDN documentation","The <code>padEnd()</code> method pads the current string with a given …","The <code>padStart()</code> method pads the current string with another …","The <code>Date.parse()</code> method parses a string representation of …","The <code>parseFloat()</code> function parses an argument and returns a …","The <code>Number.parseFloat()</code> method parses a string argument …","The <code>parseInt()</code> function parses a string argument and …","The <code>Number.parseInt()</code> method parses a string argument and …","","","","","The <code>pop()</code> method removes the last element from an array …","Applies the binary <code>**</code> JS operator on the two <code>BigInt</code>s.","Applies the binary <code>**</code> JS operator on the two <code>Number</code>s.","The <code>Object.preventExtensions()</code> method prevents new …","","","","","The <code>propertyIsEnumerable()</code> method returns a Boolean …","The <code>push()</code> method adds one or more elements to the end of …","The <code>Promise.race(iterable)</code> method returns a promise that …","The static <code>raw()</code> method is a tag function of template …","The static <code>raw()</code> method is a tag function of template …","The static <code>raw()</code> method is a tag function of template …","The static <code>raw()</code> method is a tag function of template …","The static <code>raw()</code> method is a tag function of template …","The static <code>raw()</code> method is a tag function of template …","The static <code>raw()</code> method is a tag function of template …","The static <code>raw()</code> method is a tag function of template …","The static <code>raw()</code> method is a tag function of template …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","Copy the contents of this JS typed array into the …","The <code>reduce()</code> method applies a function against an …","The <code>reduceRight()</code> method applies a function against an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Promise.reject(reason)</code> method returns a <code>Promise</code> object …","","","","","","","","","The <code>repeat()</code> method constructs and returns a new string …","The <code>replace()</code> method returns a new string with some or all …","The <code>Symbol.replace</code> well-known symbol specifies the method …","The <code>replace_all()</code> method returns a new string with all …","","MDN documentation","MDN documentation","","MDN documentation","MDN documentation","The <code>Promise.resolve(value)</code> method returns a <code>Promise</code> object …","The <code>return()</code> method returns the given value and finishes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>reverse()</code> method reverses an array in place. The first …","The <code>Proxy.revocable()</code> method is used to create a revocable …","The non-standard rightContext property is a static and …","The <code>Object.seal()</code> method seals an object, preventing new …","The <code>search()</code> method executes a search for a match between …","The <code>Symbol.search</code> well-known symbol specifies the method …","Sets the element at the index (auto-enlarges the array if …","The <code>set()</code> method adds or updates an element with a …","The <code>set()</code> method sets the value for the key in the <code>WeakMap</code> …","The <code>set()</code> method stores multiple values in the typed …","The <code>set()</code> method stores multiple values in the typed …","The <code>set()</code> method stores multiple values in the typed …","The <code>set()</code> method stores multiple values in the typed …","The <code>set()</code> method stores multiple values in the typed …","The <code>set()</code> method stores multiple values in the typed …","The <code>set()</code> method stores multiple values in the typed …","The <code>set()</code> method stores multiple values in the typed …","The <code>set()</code> method stores multiple values in the typed …","The <code>set()</code> method stores multiple values in the typed …","The <code>set()</code> method stores multiple values in the typed …","","The <code>setDate()</code> method sets the day of the Date object …","The <code>setFloat32()</code> method stores a signed 32-bit float …","The <code>setFloat32()</code> method stores a signed 32-bit float …","The <code>setFloat64()</code> method stores a signed 64-bit float …","The <code>setFloat64()</code> method stores a signed 64-bit float …","The <code>setFullYear()</code> method sets the full year for a …","The <code>setFullYear()</code> method sets the full year for a …","The <code>setFullYear()</code> method sets the full year for a …","The <code>setHours()</code> method sets the hours for a specified date …","Sets the value at <code>idx</code>, equivalent to the javascript …","Sets the value at <code>idx</code>, equivalent to the javascript …","Sets the value at <code>idx</code>, equivalent to the javascript …","Sets the value at <code>idx</code>, equivalent to the javascript …","Sets the value at <code>idx</code>, equivalent to the javascript …","Sets the value at <code>idx</code>, equivalent to the javascript …","Sets the value at <code>idx</code>, equivalent to the javascript …","Sets the value at <code>idx</code>, equivalent to the javascript …","Sets the value at <code>idx</code>, equivalent to the javascript …","Sets the value at <code>idx</code>, equivalent to the javascript …","Sets the value at <code>idx</code>, equivalent to the javascript …","The <code>setInt16()</code> method stores a signed 16-bit integer …","The <code>setInt16()</code> method stores a signed 16-bit integer …","The <code>setInt32()</code> method stores a signed 32-bit integer …","The <code>setInt32()</code> method stores a signed 32-bit integer …","The <code>setInt8()</code> method stores a signed 8-bit integer (byte) …","The lastIndex is a read/write integer property of regular …","","The <code>setMilliseconds()</code> method sets the milliseconds for a …","The <code>setMinutes()</code> method sets the minutes for a specified …","The <code>setMonth()</code> method sets the month for a specified date …","","The <code>Object.setPrototypeOf()</code> method sets the prototype …","The <code>setSeconds()</code> method sets the seconds for a specified …","The <code>setTime()</code> method sets the Date object to the time …","The <code>setUint16()</code> method stores an unsigned 16-bit integer …","The <code>setUint16()</code> method stores an unsigned 16-bit integer …","The <code>setUint32()</code> method stores an unsigned 32-bit integer …","The <code>setUint32()</code> method stores an unsigned 32-bit integer …","The <code>setUint8()</code> method stores an unsigned 8-bit integer …","The <code>setUTCDate()</code> method sets the day of the month for a …","The <code>setUTCFullYear()</code> method sets the full year for a …","The <code>setUTCFullYear()</code> method sets the full year for a …","The <code>setUTCFullYear()</code> method sets the full year for a …","The <code>setUTCHours()</code> method sets the hour for a specified …","The <code>setUTCMilliseconds()</code> method sets the milliseconds for …","The <code>setUTCMinutes()</code> method sets the minutes for a …","The <code>setUTCMonth()</code> method sets the month for a specified …","The <code>setUTCSeconds()</code> method sets the seconds for a …","The <code>shift()</code> method removes the first element from an array …","","","","","","","","","","","","","","","","","The value of size is an integer representing how many …","The size accessor property returns the number of elements …","","The <code>slice()</code> method returns a shallow copy of a portion of …","The <code>slice()</code> method returns a new <code>ArrayBuffer</code> whose contents","The <code>slice()</code> method returns a new <code>SharedArrayBuffer</code> whose …","The <code>slice()</code> method extracts a section of a string and …","The <code>slice()</code> method returns a shallow copy of a portion of …","The <code>slice()</code> method returns a shallow copy of a portion of …","The <code>slice()</code> method returns a shallow copy of a portion of …","The <code>slice()</code> method returns a shallow copy of a portion of …","The <code>slice()</code> method returns a shallow copy of a portion of …","The <code>slice()</code> method returns a shallow copy of a portion of …","The <code>slice()</code> method returns a shallow copy of a portion of …","The <code>slice()</code> method returns a shallow copy of a portion of …","The <code>slice()</code> method returns a shallow copy of a portion of …","The <code>slice()</code> method returns a shallow copy of a portion of …","The <code>slice()</code> method returns a shallow copy of a portion of …","Like <code>slice()</code> but with the <code>end</code> argument.","Like <code>slice()</code> but with the <code>end</code> argument.","The <code>some()</code> method tests whether at least one element in …","The <code>sort()</code> method sorts the elements of an array in place …","The source property returns a String containing the source …","The well-known symbol <code>Symbol.species</code> specifies a …","The <code>splice()</code> method changes the contents of an array by …","The <code>split()</code> method splits a String object into an array of …","The <code>Symbol.split</code> well-known symbol specifies the method …","MDN documentation","MDN documentation","MDN documentation","The <code>startsWith()</code> method determines whether a string begins …","The sticky property reflects whether or not the search is …","","","","","","","","","The <code>subarray()</code> method returns a new <code>TypedArray</code> on the same …","The <code>subarray()</code> method returns a new <code>TypedArray</code> on the same …","The <code>subarray()</code> method returns a new <code>TypedArray</code> on the same …","The <code>subarray()</code> method returns a new <code>TypedArray</code> on the same …","The <code>subarray()</code> method returns a new <code>TypedArray</code> on the same …","The <code>subarray()</code> method returns a new <code>TypedArray</code> on the same …","The <code>subarray()</code> method returns a new <code>TypedArray</code> on the same …","The <code>subarray()</code> method returns a new <code>TypedArray</code> on the same …","The <code>subarray()</code> method returns a new <code>TypedArray</code> on the same …","The <code>subarray()</code> method returns a new <code>TypedArray</code> on the same …","The <code>subarray()</code> method returns a new <code>TypedArray</code> on the same …","The <code>substr()</code> method returns the part of a string between …","The <code>substring()</code> method returns the part of the string …","","","","","The <code>test()</code> method executes a search for a match between a …","The <code>then()</code> method returns a <code>Promise</code>. It takes up to two …","Same as <code>then</code>, only with both arguments provided.","The <code>throw()</code> method resumes the execution of a generator by …","The <code>toDateString()</code> method returns the date portion of a …","The <code>toExponential()</code> method returns a string representing …","The <code>toFixed()</code> method returns a string representing the …","The <code>toISOString()</code> method returns a string in simplified …","The <code>toJSON()</code> method returns a string representation of the …","The <code>toLocaleDateString()</code> method returns a string with a …","The <code>toLocaleLowerCase()</code> method returns the calling string …","The <code>toLocaleString()</code> method returns a string representing …","Returns a string with a language-sensitive representation …","The <code>toLocaleString()</code> method returns a string with a …","The <code>toLocaleString()</code> method returns a string with a …","The <code>toLocaleString()</code> method returns a string representing …","The <code>toLocaleTimeString()</code> method returns a string with a …","The <code>toLocaleUpperCase()</code> method returns the calling string …","The <code>toLowerCase()</code> method returns the calling string value …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>toPrecision()</code> method returns a string representing the …","The <code>Symbol.toPrimitive</code> is a symbol that specifies a …","The <code>toString()</code> method returns a string representing the …","Returns a string representing this BigInt value in the …","","","The <code>toString()</code> method returns a string representing the …","The <code>toString()</code> method returns a string representing the …","The <code>toString()</code> method returns a string representing the …","","The <code>toString()</code> method returns a string representing the …","The <code>toString()</code> method returns a string representing the …","The <code>toString()</code> method returns a string representing the …","The <code>toString()</code> method returns a string representing the …","","The <code>toString()</code> method returns a string representing the …","The <code>Symbol.toStringTag</code> well-known symbol is a string …","The <code>toTimeString()</code> method returns the time portion of a …","The <code>toUpperCase()</code> method returns the calling string value …","The <code>toUTCString()</code> method converts a date to a string, …","Converts the JS array into a new Vec.","Efficiently copies the contents of this JS typed array …","Efficiently copies the contents of this JS typed array …","Efficiently copies the contents of this JS typed array …","Efficiently copies the contents of this JS typed array …","Efficiently copies the contents of this JS typed array …","Efficiently copies the contents of this JS typed array …","Efficiently copies the contents of this JS typed array …","Efficiently copies the contents of this JS typed array …","Efficiently copies the contents of this JS typed array …","Efficiently copies the contents of this JS typed array …","Efficiently copies the contents of this JS typed array …","The <code>trim()</code> method removes whitespace from both ends of a …","The <code>trimEnd()</code> method removes whitespace from the end of a …","The <code>trimStart()</code> method removes whitespace from the …","The <code>trimEnd()</code> method removes whitespace from the end of a …","The <code>trimStart()</code> method removes whitespace from the …","","","","","","","","","","","","","Returns the <code>Function</code> value of this JS value if it’s an …","","","","","","","","","Returns the <code>Object</code> value of this JS value if it’s an …","","","","","","","","","","","Returns the <code>JsString</code> value of this JS value if it’s an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an iterator over <code>val</code> using the JS iteration …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>unescape()</code> function computes a new string in which …","The unicode property indicates whether or not the “u” …","The <code>Symbol.unscopables</code> well-known symbol is used to …","The <code>unshift()</code> method adds one or more elements to the …","Applies the binary <code>&gt;&gt;&gt;</code> JS operator on the two <code>Number</code>s.","The <code>Date.UTC()</code> method accepts the same parameters as the …","Any JavaScript value returned by the iterator. Can be …","Returns this BigInt value. Overrides the …","The <code>valueOf()</code> method returns the primitive value of a …","The <code>valueOf()</code> method returns the wrapped primitive value of","The <code>valueOf()</code> method  returns the primitive value of a …","The <code>valueOf()</code> method returns the primitive value of the …","The <code>valueOf()</code> method returns the primitive value of a …","The <code>valueOf()</code> method returns the primitive value of a …","The <code>values()</code> method returns a new Array Iterator object …","The <code>values()</code> method returns a new Iterator object that …","The <code>Object.values()</code> method returns an array of a given …","The <code>values()</code> method returns a new Iterator object that …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","Creates a JS typed array which is a view into wasm’s …","The static <code>Atomics.add()</code> method adds a given value at a …","The static <code>Atomics.and()</code> method computes a bitwise AND …","The static <code>Atomics.compareExchange()</code> method exchanges a …","The static <code>Atomics.exchange()</code> method stores a given value …","The static <code>Atomics.isLockFree()</code> method is used to determine","The static <code>Atomics.load()</code> method returns a value at a given","The static <code>Atomics.notify()</code> method notifies up some agents …","Notifies up to <code>count</code> agents in the wait queue.","The static <code>Atomics.or()</code> method computes a bitwise OR with …","The static <code>Atomics.store()</code> method stores a given value at …","The static <code>Atomics.sub()</code> method substracts a given value …","The static <code>Atomics.wait()</code> method verifies that a given …","Like <code>wait()</code>, but with timeout","The static <code>Atomics.xor()</code> method computes a bitwise XOR …","The <code>Intl.Collator</code> object is a constructor for collators, …","The <code>Intl.DateTimeFormat</code> object is a constructor for objects","The <code>Intl.NumberFormat</code> object is a constructor for objects …","The <code>Intl.PluralRules</code> object is a constructor for objects …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Intl.Collator.prototype.compare property returns a …","","","","","","","","","","","","","","","","","The Intl.DateTimeFormat.prototype.format property returns …","The Intl.NumberFormat.prototype.format property returns a …","The <code>Intl.DateTimeFormat.prototype.formatToParts()</code> method …","The <code>Intl.Numberformat.prototype.formatToParts()</code> method …","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","The <code>Intl.getCanonicalLocales()</code> method returns an array …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The <code>Intl.Collator</code> object is a constructor for collators, …","The <code>Intl.DateTimeFormat</code> object is a constructor for objects","The <code>Intl.NumberFormat</code> object is a constructor for objects …","The <code>Intl.PluralRules</code> object is a constructor for objects …","","","","","","","","","","","","","The <code>Intl.Collator.prototype.resolvedOptions()</code> method …","The <code>Intl.DateTimeFormat.prototype.resolvedOptions()</code> method …","The <code>Intl.NumberFormat.prototype.resolvedOptions()</code> method …","The <code>Intl.PluralRules.prototype.resolvedOptions()</code> method …","","","","","The <code>Intl.PluralRules.prototype.select()</code> method returns a …","The <code>Intl.Collator.supportedLocalesOf()</code> method returns an …","The <code>Intl.DateTimeFormat.supportedLocalesOf()</code> method …","The <code>Intl.NumberFormat.supportedLocalesOf()</code> method returns …","The <code>Intl.PluralRules.supportedLocalesOf()</code> method returns …","","","","","","","","","","","","","","","","","","","","","","","","","The <code>JSON.parse()</code> method parses a JSON string, constructing …","The <code>JSON.stringify()</code> method converts a JavaScript value to …","The <code>JSON.stringify()</code> method converts a JavaScript value to …","The <code>JSON.stringify()</code> method converts a JavaScript value to …","The <code>Math.abs()</code> function returns the absolute value of a …","The <code>Math.acos()</code> function returns the arccosine (in …","The <code>Math.acosh()</code> function returns the hyperbolic …","The <code>Math.asin()</code> function returns the arcsine (in radians) …","The <code>Math.asinh()</code> function returns the hyperbolic arcsine …","The <code>Math.atan()</code> function returns the arctangent (in …","The <code>Math.atan2()</code> function returns the arctangent of the …","The <code>Math.atanh()</code> function returns the hyperbolic …","The <code>Math.cbrt() </code>function returns the cube root of a …","The <code>Math.ceil()</code> function returns the smallest integer …","The <code>Math.clz32()</code> function returns the number of leading …","The <code>Math.cos()</code> static function returns the cosine of the …","The <code>Math.cosh()</code> function returns the hyperbolic cosine of …","The <code>Math.exp()</code> function returns e^x, where x is the …","The <code>Math.expm1()</code> function returns e^x - 1, where x is the …","The <code>Math.floor()</code> function returns the largest integer less …","The <code>Math.fround()</code> function returns the nearest 32-bit …","The <code>Math.hypot()</code> function returns the square root of the …","The <code>Math.imul()</code> function returns the result of the C-like …","The <code>Math.log()</code> function returns the natural logarithm …","The <code>Math.log10()</code> function returns the base 10 logarithm of …","The <code>Math.log1p()</code> function returns the natural logarithm …","The <code>Math.log2()</code> function returns the base 2 logarithm of a …","The <code>Math.max()</code> function returns the largest of two numbers.","The static function <code>Math.min()</code> returns the lowest-valued …","The <code>Math.pow()</code> function returns the base to the exponent …","The <code>Math.random()</code> function returns a floating-point, …","The <code>Math.round()</code> function returns the value of a number …","The <code>Math.sign()</code> function returns the sign of a number, …","The <code>Math.sin()</code> function returns the sine of a number.","The <code>Math.sinh()</code> function returns the hyperbolic sine of a …","The <code>Math.sqrt()</code> function returns the square root of a …","The <code>Math.tan()</code> function returns the tangent of a number.","The <code>Math.tanh()</code> function returns the hyperbolic tangent of …","The <code>Math.trunc()</code> function returns the integer part of a …","The static <code>Reflect.apply()</code> method calls a target function …","The static <code>Reflect.construct()</code> method acts like the new …","The static <code>Reflect.construct()</code> method acts like the new …","The static <code>Reflect.defineProperty()</code> method is like …","The static <code>Reflect.deleteProperty()</code> method allows to delete","The static <code>Reflect.get()</code> method works like getting a …","The same as <code>get</code> except the key is an <code>f64</code>, which is …","The static <code>Reflect.getOwnPropertyDescriptor()</code> method is …","The static <code>Reflect.getPrototypeOf()</code> method is almost the …","The same as <code>get</code> except the key is a <code>u32</code>, which is slightly …","The static <code>Reflect.has()</code> method works like the in operator …","The static <code>Reflect.isExtensible()</code> method determines if an …","The static <code>Reflect.ownKeys()</code> method returns an array of the","The static <code>Reflect.preventExtensions()</code> method prevents new …","The static <code>Reflect.set()</code> method works like setting a …","The same as <code>set</code> except the key is an <code>f64</code>, which is …","The static <code>Reflect.setPrototypeOf()</code> method is the same …","The same as <code>set</code> except the key is a <code>u32</code>, which is slightly …","The static <code>Reflect.set()</code> method works like setting a …","The <code>WebAssembly.CompileError()</code> constructor creates a new …","The <code>WebAssembly.Global()</code> constructor creates a new <code>Global</code> …","A <code>WebAssembly.Instance</code> object is a stateful, executable …","The <code>WebAssembly.LinkError()</code> constructor creates a new …","MDN documentation","A <code>WebAssembly.Module</code> object contains stateless WebAssembly …","The <code>WebAssembly.RuntimeError()</code> constructor creates a new …","The <code>WebAssembly.Table()</code> constructor creates a new <code>Table</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An accessor property that returns the buffer contained in …","","","","","","","","","","","","","","","","","The <code>WebAssembly.compile()</code> function compiles a …","The <code>WebAssembly.compileStreaming()</code> function compiles a …","The <code>WebAssembly.customSections()</code> function returns a copy …","","","","","","","","","","","","","","","","","","","","","","","","","The <code>exports</code> readonly property of the <code>WebAssembly.Instance</code> …","The <code>WebAssembly.exports()</code> function returns an array …","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","The <code>get()</code> prototype method of the <code>WebAssembly.Table()</code> …","The <code>grow()</code> prototype method of the <code>WebAssembly.Table</code> object","The <code>grow()</code> protoype method of the <code>Memory</code> object increases …","The <code>WebAssembly.imports()</code> function returns an array …","","","","","","","","","The <code>WebAssembly.instantiate()</code> function allows you to …","The <code>WebAssembly.instantiate()</code> function allows you to …","The <code>WebAssembly.instantiateStreaming()</code> function compiles …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The length prototype property of the <code>WebAssembly.Table</code> …","The <code>WebAssembly.CompileError()</code> constructor creates a new …","The <code>WebAssembly.Instance()</code> constructor function can be …","The <code>WebAssembly.LinkError()</code> constructor creates a new …","The <code>WebAssembly.RuntimeError()</code> constructor creates a new …","A <code>WebAssembly.Module</code> object contains stateless WebAssembly …","The <code>WebAssembly.Table()</code> constructor creates a new <code>Table</code> …","The <code>WebAssembly.Global()</code> constructor creates a new <code>Global</code> …","The <code>WebAssembly.Memory()</code> constructor creates a new <code>Memory</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>set()</code> prototype method of the <code>WebAssembly.Table</code> object …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>WebAssembly.validate()</code> function validates a given typed","The value prototype property of the <code>WebAssembly.Global</code> …"],"i":[0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,5,7,7,7,8,11,1,9,9,9,15,15,15,16,16,16,1,1,1,17,17,17,18,18,18,19,19,19,20,20,20,20,8,8,8,21,21,21,22,22,22,23,23,24,24,25,25,25,2,2,2,26,26,26,6,6,27,27,28,28,28,28,29,29,29,29,30,30,30,3,3,3,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,5,5,5,11,11,11,35,35,7,7,7,36,36,36,37,37,37,38,38,38,39,39,39,40,40,40,41,41,41,42,42,42,43,43,43,44,44,44,45,45,45,46,46,46,1,6,6,6,35,9,11,36,37,38,39,40,41,42,43,44,45,46,8,8,8,8,8,1,1,1,1,2,2,2,2,1,1,1,1,2,2,2,2,1,1,1,1,2,2,2,2,81,82,9,58,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,81,82,9,58,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,18,36,37,38,39,40,41,42,43,44,45,46,15,16,18,36,37,38,39,40,41,42,43,44,45,46,18,36,37,38,39,40,41,42,43,44,45,46,8,8,8,8,7,19,11,11,1,22,3,9,58,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,9,58,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,1,17,11,11,9,11,6,36,37,38,39,40,41,42,43,44,45,46,36,37,38,39,40,41,42,43,44,45,46,9,6,0,0,9,1,17,8,22,2,6,3,34,5,36,37,38,39,40,41,42,43,44,45,46,6,6,9,22,3,34,5,9,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,9,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,1,1,1,1,2,2,2,2,25,0,0,11,9,22,6,3,9,15,1,1,1,1,1,1,1,1,1,1,1,1,1,1,17,17,18,19,20,8,21,22,25,2,2,2,2,2,2,2,2,2,2,26,6,28,29,30,3,31,32,33,34,5,11,11,11,11,11,0,0,9,30,9,9,36,37,38,39,40,41,42,43,44,45,46,9,7,9,9,30,9,9,9,58,15,16,1,1,1,1,1,1,17,17,18,19,20,8,21,22,23,24,25,2,2,26,6,27,28,29,30,3,31,32,33,34,5,11,11,35,7,36,37,38,39,40,41,42,43,44,45,46,35,9,22,3,36,37,38,39,40,41,42,43,44,45,46,6,81,82,9,9,9,58,15,15,16,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,17,17,17,18,18,19,19,19,19,19,19,19,19,19,19,19,20,20,8,8,21,21,22,22,23,23,24,24,25,25,2,2,2,2,2,2,2,2,2,2,26,26,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,27,27,28,28,29,29,30,30,3,3,31,31,32,32,33,33,34,34,5,5,11,11,11,11,11,35,35,7,7,36,36,36,37,37,37,38,38,38,39,39,39,40,40,40,41,41,41,42,42,42,43,43,43,44,44,44,45,45,45,46,46,46,9,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,11,11,11,11,11,11,11,11,11,11,11,11,6,9,1,2,11,1,17,2,11,9,22,34,26,26,18,18,18,18,26,26,36,37,38,39,40,41,42,43,44,45,46,18,18,18,18,18,26,26,26,6,6,6,6,6,26,26,26,18,18,18,18,18,26,26,26,26,26,26,26,26,0,30,1,17,2,11,22,3,34,5,35,6,6,30,9,11,9,11,30,9,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,81,82,9,58,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,9,9,15,15,16,16,1,1,17,17,18,18,19,19,20,20,8,8,21,21,22,22,23,23,24,24,25,25,2,2,26,26,6,6,27,27,28,28,29,29,30,30,3,3,31,31,32,32,33,33,34,34,5,5,11,11,35,35,7,7,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,81,82,58,23,23,6,9,35,6,0,2,6,2,2,9,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,6,2,6,9,1,17,8,23,24,2,11,35,11,15,9,11,35,9,35,9,22,6,3,30,9,11,30,30,1,17,2,11,30,9,8,11,36,37,38,39,40,41,42,43,44,45,46,11,1,17,2,11,9,11,35,11,19,1,1,1,1,2,2,2,2,30,30,30,30,30,30,30,30,30,30,19,8,1,1,2,2,9,15,16,1,17,18,19,20,22,2,26,6,27,28,29,30,3,31,32,33,34,5,7,36,37,38,39,40,41,42,43,44,45,46,26,8,30,8,36,37,38,39,40,41,42,43,44,45,46,36,37,38,39,40,41,42,43,44,45,46,9,36,37,38,39,40,41,42,43,44,45,46,19,26,26,26,26,26,26,81,82,58,21,23,24,58,9,9,15,15,16,16,1,1,17,17,18,18,19,19,20,20,8,8,21,21,22,22,23,23,24,24,25,25,2,2,26,26,6,6,27,27,28,28,29,29,30,30,3,3,31,31,32,32,33,33,34,34,5,5,11,11,35,35,7,7,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,11,1,1,17,17,2,2,26,9,9,9,9,9,11,11,26,0,2,0,2,1,17,2,11,9,1,2,6,1,1,2,2,6,9,7,11,11,11,11,11,11,11,11,11,36,37,38,39,40,41,42,43,44,45,46,9,9,9,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,7,1,1,1,1,2,2,2,2,11,11,35,11,11,11,11,11,11,11,7,21,9,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,9,27,30,6,11,35,9,22,34,36,37,38,39,40,41,42,43,44,45,46,19,26,18,18,18,18,26,26,26,26,36,37,38,39,40,41,42,43,44,45,46,18,18,18,18,18,30,19,26,26,26,19,6,26,26,18,18,18,18,18,26,26,26,26,26,26,26,26,26,9,1,1,1,1,2,2,2,2,1,1,1,1,2,2,2,2,22,3,58,9,15,16,11,36,37,38,39,40,41,42,43,44,45,46,15,16,9,9,30,35,9,11,35,11,11,11,11,30,1,1,1,1,2,2,2,2,36,37,38,39,40,41,42,43,44,45,46,11,11,1,1,2,2,30,7,7,21,26,2,2,26,26,26,11,9,1,2,26,6,26,11,11,9,58,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,2,35,9,1,1,17,19,8,2,2,26,6,30,11,11,35,35,26,11,26,9,36,37,38,39,40,41,42,43,44,45,46,11,11,11,11,11,81,82,9,58,15,16,1,17,18,19,20,8,8,21,22,23,24,25,2,26,6,6,27,28,29,30,3,31,32,33,34,5,11,11,35,7,36,37,38,39,40,41,42,43,44,45,46,81,82,9,58,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,0,81,82,9,58,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,9,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,9,15,16,1,17,18,19,20,8,21,22,23,24,25,2,26,6,27,28,29,30,3,31,32,33,34,5,11,35,7,36,37,38,39,40,41,42,43,44,45,46,0,30,35,9,2,26,25,1,17,2,26,6,11,35,9,22,6,3,36,37,38,39,40,41,42,43,44,45,46,36,37,38,39,40,41,42,43,44,45,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,77,77,80,80,80,79,79,79,78,78,78,77,80,79,78,77,80,79,78,77,80,79,78,77,80,79,78,77,77,80,79,78,77,80,79,78,77,80,79,78,77,80,79,78,80,79,80,79,77,77,80,80,79,79,78,78,77,80,79,78,0,77,80,79,78,77,80,79,78,77,77,80,80,79,79,78,78,77,80,79,78,77,80,79,78,77,77,80,80,79,79,78,78,77,80,79,78,77,80,79,78,77,80,79,78,78,77,80,79,78,77,80,79,78,77,80,79,78,77,80,79,78,77,80,79,78,77,80,79,78,77,80,79,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,69,69,76,76,76,71,71,71,70,70,70,75,75,75,74,74,74,73,73,73,72,72,72,69,76,71,70,75,74,73,72,69,76,71,70,75,74,73,72,72,69,76,71,70,75,74,73,72,69,76,71,70,75,74,73,72,0,0,75,69,76,71,70,75,74,73,72,69,76,71,70,75,74,73,72,69,76,71,70,75,74,73,72,76,75,69,76,71,70,75,74,73,72,69,69,76,76,71,71,70,70,75,75,74,74,73,73,72,72,69,76,71,70,75,74,73,72,74,74,72,75,69,76,71,70,75,74,73,72,0,0,0,69,76,71,70,75,74,73,72,69,69,76,76,71,71,70,70,75,75,74,74,73,73,72,72,69,76,71,70,75,74,73,72,74,69,76,71,70,75,74,73,72,69,69,76,76,71,71,70,70,75,75,74,74,73,73,72,72,69,76,71,70,75,74,73,72,69,76,71,70,75,74,73,72,74,73,69,76,71,70,75,74,73,72,69,76,71,70,75,74,73,72,69,76,71,70,75,74,73,72,69,76,71,70,75,74,73,72,69,76,71,70,75,74,73,72,69,76,71,70,75,74,73,72,0,73],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[[3,4],3],[[5,6],5],[4,7],[4,7],[4,7],[[8,4,9],[[10,[4,4]]]],[11,[[13,[12]]]],[[14,1],1],[9,6],[9,9],[9,4],[15,6],[15,4],[15,15],[16,6],[16,16],[16,4],[1,6],[1,4],[1,1],[17,17],[17,4],[17,6],[18,6],[18,18],[18,4],[19,4],[19,19],[19,6],[20,19],[20,6],[20,20],[20,4],[8,4],[8,8],[8,6],[21,4],[21,21],[21,6],[22,4],[22,6],[22,22],[23,23],[23,4],[24,24],[24,4],[25,25],[25,4],[25,6],[2,4],[2,6],[2,2],[26,6],[26,4],[26,26],[6,4],[6,6],[27,27],[27,4],[28,19],[28,28],[28,4],[28,6],[29,19],[29,4],[29,29],[29,6],[30,30],[30,6],[30,4],[3,6],[3,3],[3,4],[31,19],[31,31],[31,6],[31,4],[32,4],[32,6],[32,32],[32,19],[33,6],[33,19],[33,4],[33,33],[34,4],[34,34],[34,6],[5,6],[5,4],[5,5],[11,4],[11,11],[11,6],[35,4],[35,35],[7,6],[7,7],[7,4],[36,6],[36,36],[36,4],[37,6],[37,37],[37,4],[38,4],[38,6],[38,38],[39,39],[39,4],[39,6],[40,6],[40,4],[40,40],[41,41],[41,4],[41,6],[42,6],[42,4],[42,42],[43,43],[43,6],[43,4],[44,44],[44,6],[44,4],[45,4],[45,45],[45,6],[46,4],[46,46],[46,6],[[14,1],1],[[6,6],6],[[6,6,6],6],[[6,6,6,6],6],[[],35],[[9,47],4],[[11,47],[[13,[11]]]],[[36,47],[[13,[48]]]],[[37,47],[[13,[49]]]],[[38,47],[[13,[47]]]],[[39,47],[[13,[50]]]],[[40,47],[[13,[50]]]],[[41,47],[[13,[51]]]],[[42,47],[[13,[52]]]],[[43,47],[[13,[53]]]],[[44,47],[[13,[14]]]],[[45,47],[[13,[54]]]],[[46,47],[[13,[55]]]],[[8,4],8],[[8,4],8],[[8,4,4],8],[[8,4,4,4],8],[[8,4,4,4,4],8],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,15],[36,15],[37,15],[38,15],[39,15],[40,15],[41,15],[42,15],[43,15],[44,15],[45,15],[46,15],[15,52],[16,52],[18,56],[36,52],[37,52],[38,52],[39,52],[40,52],[41,52],[42,52],[43,52],[44,52],[45,52],[46,52],[18,56],[36,52],[37,52],[38,52],[39,52],[40,52],[41,52],[42,52],[43,52],[44,52],[45,52],[46,52],[[8,4],[[10,[4,4]]]],[[8,4,4],[[10,[4,4]]]],[[8,4,4,4],[[10,[4,4]]]],[[8,4,4,4,4],[[10,[4,4]]]],[[7,57],7],[19,4],[[11,52],11],[[11,52],14],[[1,1],[[10,[1,28]]]],[22],[3],[9,9],[58,58],[15,15],[16,16],[1,1],[17,17],[18,18],[19,19],[20,20],[8,8],[21,21],[22,22],[23,23],[24,24],[25,25],[2,2],[26,26],[6,6],[27,27],[28,28],[29,29],[30,30],[3,3],[31,31],[32,32],[33,33],[34,34],[5,5],[11,11],[35,35],[7,7],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],59],[[17,17],59],[[11,11],59],[[11,52],4],[[9,9],9],[[11,4],11],[6,8],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[[9,47,47,47],9],[6,6],[60,[[10,[11,4]]]],[60,[[10,[11,4]]]],[[],9],[[],1],[[],17],[[],8],[[],22],[[],2],[[],6],[[],3],[[],34],[[],5],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[],46],[[6,6],6],[[6,4,6],6],[[9,52]],[[22,4],61],[[3,4],61],[[34,6],61],[[5,6],61],[9,6],[15,6],[16,6],[1,6],[17,6],[18,6],[19,6],[20,6],[8,6],[21,6],[22,6],[23,4],[24,4],[25,6],[2,6],[26,6],[6,4],[27,4],[28,19],[29,19],[30,6],[3,6],[31,19],[32,19],[33,19],[34,6],[5,6],[11,6],[35,4],[7,6],[36,6],[37,6],[38,6],[39,6],[40,6],[41,6],[42,6],[43,6],[44,6],[45,6],[46,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[25,61],[60,11],[60,11],[[11,60,47],61],[9,23],[22,23],[6,9],[3,23],[[9,9],61],[[15,15],61],[[1,49],61],[[1,62],61],[[1,2],61],[[1,56],61],[[1,52],61],[[1,54],61],[[1,55],61],[[1,63],61],[[1,47],61],[[1,64],61],[[1,51],61],[[1,50],61],[[1,48],61],[[1,1],61],[[17,61],61],[[17,17],61],[[18,18],61],[[19,19],61],[[20,20],61],[[8,8],61],[[21,21],61],[[22,22],61],[[25,25],61],[[2,53],61],[[2,49],61],[[2,50],61],[[2,48],61],[[2,2],61],[[2,52],61],[[2,51],61],[[2,47],61],[[2,1],61],[[2,14],61],[[26,26],61],[[6,6],61],[[28,28],61],[[29,29],61],[[30,30],61],[[3,3],61],[[31,31],61],[[32,32],61],[[33,33],61],[[34,34],61],[[5,5],61],[[11,11],61],[[11,60],61],[[11,60],61],[[11,65],61],[[11,65],61],[60,11],[60,[[10,[4,4]]]],[[9,66],61],[[30,60],[[13,[9]]]],[9],[[9,4,52,52],9],[[36,48,52,52],36],[[37,49,52,52],37],[[38,47,52,52],38],[[39,50,52,52],39],[[40,50,52,52],40],[[41,51,52,52],41],[[42,52,52,52],42],[[43,53,52,52],43],[[44,14,52,52],44],[[45,54,52,52],45],[[46,55,52,52],46],[[9,66],9],[[7,57],7],[[9,66],4],[[9,66],47],[30,11],[[9,47],9],[[9,66],9],[[9,67],68],[[58,67],68],[[15,67],68],[[16,67],68],[[1,67],68],[[1,67],68],[[1,67],68],[[1,67],68],[[1,67],68],[[1,67],68],[[17,67],68],[[17,67],68],[[18,67],68],[[19,67],68],[[20,67],68],[[8,67],68],[[21,67],68],[[22,67],68],[[23,67],68],[[24,67],68],[[25,67],68],[[2,67],68],[[2,67],68],[[26,67],68],[[6,67],68],[[27,67],68],[[28,67],68],[[29,67],68],[[30,67],68],[[3,67],68],[[31,67],68],[[32,67],68],[[33,67],68],[[34,67],68],[[5,67],68],[[11,67],68],[[11,67],68],[[35,67],68],[[7,67],68],[[36,67],68],[[37,67],68],[[38,67],68],[[39,67],68],[[40,67],68],[[41,67],68],[[42,67],68],[[43,67],68],[[44,67],68],[[45,67],68],[[46,67],68],[60,35],[[9,66]],[[22,66]],[[3,66]],[[36,66]],[[37,66]],[[38,66]],[[39,66]],[[40,66]],[[41,66]],[[42,66]],[[43,66]],[[44,66]],[[45,66]],[[46,66]],[6,6],[[]],[[]],[4,9],[[]],[4,9],[[]],[[]],[4,15],[[]],[4,16],[63,1],[52,1],[4,1],[49,1],[50,1],[47,1],[56,1],[51,1],[54,1],[55,1],[[]],[64,1],[48,1],[62,1],[61,17],[4,17],[[]],[4,18],[[]],[28,19],[29,19],[32,19],[20,19],[31,19],[[]],[4,19],[33,19],[69,19],[70,19],[71,19],[4,20],[[]],[[]],[4,8],[[]],[4,21],[4,22],[[]],[4,23],[[]],[[]],[4,24],[[]],[4,25],[14,2],[4,2],[[]],[48,2],[53,2],[52,2],[47,2],[51,2],[49,2],[50,2],[[]],[4,26],[32,6],[16,6],[46,6],[42,6],[41,6],[40,6],[30,6],[39,6],[38,6],[2,6],[21,6],[19,6],[37,6],[31,6],[17,6],[36,6],[1,6],[[]],[18,6],[15,6],[20,6],[45,6],[7,6],[3,6],[9,6],[72,6],[73,6],[74,6],[25,6],[75,6],[8,6],[26,6],[33,6],[11,6],[28,6],[29,6],[4,6],[43,6],[76,6],[34,6],[5,6],[77,6],[44,6],[78,6],[22,6],[79,6],[80,6],[4,27],[[]],[[]],[4,28],[4,29],[[]],[[]],[4,30],[[]],[4,3],[[]],[4,31],[[]],[4,32],[4,33],[[]],[4,34],[[]],[4,5],[[]],[[]],[12,11],[4,11],[60,11],[65,11],[4,35],[[]],[4,7],[[]],[[]],[4,36],[[],36],[[]],[[],37],[4,37],[[],38],[[]],[4,38],[[],39],[4,39],[[]],[[],40],[4,40],[[]],[[],41],[4,41],[[]],[[],42],[4,42],[[]],[4,43],[[]],[[],43],[4,44],[[],44],[[]],[4,45],[[]],[[],45],[[]],[4,46],[[],46],[[],9],[[],15],[[],16],[[],1],[[],17],[[],18],[[],19],[[],20],[[],8],[[],21],[[],22],[[],23],[[],24],[[],25],[[],2],[[],26],[[],6],[[],27],[[],28],[[],29],[[],30],[[],3],[[],31],[[],32],[[],33],[[],34],[[],5],[[],11],[[],35],[[],7],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[],46],[[],11],[52,11],[[52,52],11],[[52,52,52],11],[[52,52,52,52],11],[[52,52,52,52,52],11],[[],[[10,[11,4]]]],[52,[[10,[11,4]]]],[[52,52],[[10,[11,4]]]],[[52,52,52],[[10,[11,4]]]],[[52,52,52,52],[[10,[11,4]]]],[[52,52,52,52,52],[[10,[11,4]]]],[4,[[10,[6,4]]]],[[],9],[60,[[10,[1]]]],[60,[[10,[2]]]],[60,[[10,[11]]]],[[1,1],61],[[17,17],61],[[2,2],61],[[11,11],61],[[9,52],4],[[22,4],4],[[34,6],4],[26,52],[26,52],[[18,56],53],[[18,56,61],53],[[18,56],14],[[18,56,61],14],[26,52],[26,52],[[36,52],48],[[37,52],49],[[38,52],47],[[39,52],50],[[40,52],50],[[41,52],51],[[42,52],52],[[43,52],53],[[44,52],14],[[45,52],54],[[46,52],55],[[18,56],49],[[18,56,61],49],[[18,56],47],[[18,56,61],47],[[18,56],48],[26,52],[26,52],[26,52],[[6,4],4],[6,4],[6,9],[6,9],[4,6],[26,52],[26,14],[26,14],[[18,56],51],[[18,56,61],51],[[18,56],52],[[18,56,61],52],[[18,56],50],[26,52],[26,52],[26,52],[26,52],[26,52],[26,52],[26,52],[26,52],[[],6],[30,61],[[1,1],61],[[17,17],61],[[2,2],61],[[11,11],61],[[22,4],61],[[3,4],61],[[34,6],61],[[5,6],61],[[],35],[[6,4],61],[[6,4],61],[30,61],[[9,4,47],61],[[11,60,47],61],[[9,4,47],47],[[11,60,47],47],[[],11],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[15],[15],[16],[16],[1],[1],[17],[17],[18],[18],[19],[19],[20],[20],[8],[8],[21],[21],[22],[22],[23],[23],[24],[24],[25],[25],[2],[2],[26],[26],[6],[6],[27],[27],[28],[28],[29],[29],[30],[30],[3],[3],[31],[31],[32],[32],[33],[33],[34],[34],[5],[5],[11],[11],[35],[35],[7],[7],[36],[36],[37],[37],[38],[38],[39],[39],[40],[40],[41],[41],[42],[42],[43],[43],[44],[44],[45],[45],[46],[46],[[]],[[]],[[]],[23,81],[23,82],[[4,4],61],[4,61],[[],35],[6,61],[4,61],[4,61],[6,61],[4,61],[4,61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[6,4],61],[4,61],[6,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[11,61],[4,61],[9,58],[11,[[0,[83,84]]]],[[],35],[[9,60],11],[35,4],[9,23],[22,23],[6,9],[3,23],[30,52],[[9,4,47],47],[[11,60,47],47],[[],11],[[],11],[[1,1],61],[[17,17],61],[[2,2],61],[[11,11],61],[[],11],[9,52],[8,52],[11,52],[36,52],[37,52],[38,52],[39,52],[40,52],[41,52],[42,52],[43,52],[44,52],[45,52],[46,52],[[11,60,9,6],47],[[1,1],61],[[17,17],61],[[2,2],61],[[11,11],61],[[9,66],9],[[11,30],[[13,[6]]]],[[],35],[[11,30],23],[19,11],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[30,61],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[19,11],[8,11],[1],[1],[2],[2],[[],9],[52,15],[52,16],[4,[[10,[1,19]]]],[4,17],[[15,56,56],18],[60,19],[60,20],[[],22],[4,2],[4,26],[[],6],[[4,6],27],[60,28],[60,29],[[60,60],30],[4,3],[60,31],[60,32],[60,33],[[],34],[[],5],[66,7],[4,36],[4,37],[4,38],[4,39],[4,40],[4,41],[4,42],[4,43],[4,44],[4,45],[4,46],[[],26],[60,8],[[30,60],30],[[60,60],8],[[4,52],36],[[4,52],37],[[4,52],38],[[4,52],39],[[4,52],40],[[4,52],41],[[4,52],42],[[4,52],43],[[4,52],44],[[4,52],45],[[4,52],46],[[4,52,52],36],[[4,52,52],37],[[4,52,52],38],[[4,52,52],39],[[4,52,52],40],[[4,52,52],41],[[4,52,52],42],[[4,52,52],43],[[4,52,52],44],[[4,52,52],45],[[4,52,52],46],[52,9],[52,36],[52,37],[52,38],[52,39],[52,40],[52,41],[52,42],[52,43],[52,44],[52,45],[52,46],[[60,6],19],[[52,47],26],[[52,47,47],26],[[52,47,47,47],26],[[52,47,47,47,47],26],[[52,47,47,47,47,47],26],[[52,47,47,47,47,47,47],26],[81,13],[82,13],[58,13],[[21,4],[[10,[4,4]]]],[23,[[10,[25,4]]]],[24,[[10,[7,4]]]],[58,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,60],11],[1],[1],[17],[17],[2],[2],[[],14],[4,9],[[4,4],9],[[4,4,4],9],[[4,4,4,4],9],[[4,4,4,4,4],9],[[11,52,60],11],[[11,52,60],11],[60,14],[60,14],[60,14],[[60,50],14],[[60,50],14],[[1,1],[[13,[59]]]],[[17,17],[[13,[59]]]],[[2,2],[[13,[59]]]],[[11,11],[[13,[59]]]],[9,4],[[1,1],1],[[2,2],2],[6],[85,1],[85,1],[85,2],[85,2],[[6,4],61],[[9,4],52],[4,7],[[6,9],[[10,[11,4]]]],[6,[[10,[11,4]]]],[[6,60],[[10,[11,4]]]],[[6,60,60],[[10,[11,4]]]],[[6,60,60,60],[[10,[11,4]]]],[[6,60,60,60,60],[[10,[11,4]]]],[[6,60,60,60,60,60],[[10,[11,4]]]],[[6,60,60,60,60,60,60],[[10,[11,4]]]],[[6,60,60,60,60,60,60,60],[[10,[11,4]]]],[[36,48]],[[37,49]],[[38,47]],[[39,50]],[[40,50]],[[41,51]],[[42,52]],[[43,53]],[[44,14]],[[45,54]],[[46,55]],[[9,66,4],4],[[9,66,4],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,7],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[[11,47],11],[[11,60,60],11],[[],35],[[11,60,60],11],[[11,30,60],11],[[11,30,8],11],[[11,60,8],11],[[11,30,60],11],[[11,30,8],11],[[11,60,8],11],[4,7],[[21,4],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[[4,6],6],[[],11],[6,6],[[11,30],47],[[],35],[[9,52,4]],[[22,4,4],22],[[34,6,4],34],[[36,4,52]],[[37,4,52]],[[38,4,52]],[[39,4,52]],[[40,4,52]],[[41,4,52]],[[42,4,52]],[[43,4,52]],[[44,4,52]],[[45,4,52]],[[46,4,52]],[[19,4]],[[26,52],14],[[18,56,53]],[[18,56,53,61]],[[18,56,14]],[[18,56,14,61]],[[26,52],14],[[26,52,47],14],[[26,52,47,47],14],[[26,52],14],[[36,52,48]],[[37,52,49]],[[38,52,47]],[[39,52,50]],[[40,52,50]],[[41,52,51]],[[42,52,52]],[[43,52,53]],[[44,52,14]],[[45,52,54]],[[46,52,55]],[[18,56,49]],[[18,56,49,61]],[[18,56,47]],[[18,56,47,61]],[[18,56,48]],[[30,52]],[[19,60]],[[26,52],14],[[26,52],14],[[26,52],14],[[19,60]],[[6,6],6],[[26,52],14],[[26,14],14],[[18,56,51]],[[18,56,51,61]],[[18,56,52]],[[18,56,52,61]],[[18,56,50]],[[26,52],14],[[26,52],14],[[26,52,47],14],[[26,52,47,47],14],[[26,52],14],[[26,52],14],[[26,52],14],[[26,52],14],[[26,52],14],[9,4],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[22,52],[3,52],[58],[[9,52,52],9],[[15,52],15],[[16,52],16],[[11,52,52],11],[[36,52,52],36],[[37,52,52],37],[[38,52,52],38],[[39,52,52],39],[[40,52,52],40],[[41,52,52],41],[[42,52,52],42],[[43,52,52],43],[[44,52,52],44],[[45,52,52],45],[[46,52,52],46],[[15,52,52],15],[[16,52,52],16],[[9,66],61],[9,9],[30,11],[[],35],[[9,52,52,4],9],[[11,60],9],[[],35],[[11,30],9],[[11,30,52],9],[[11,60,52],9],[[11,60,52],61],[30,61],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[2,2]],[[2,2]],[[2,2]],[[2,2]],[[36,52,52],36],[[37,52,52],37],[[38,52,52],38],[[39,52,52],39],[[40,52,52],40],[[41,52,52],41],[[42,52,52],42],[[43,52,52],43],[[44,52,52],44],[[45,52,52],45],[[46,52,52],46],[[11,47,47],11],[[11,52,52],11],[85,1],[85,1],[85,2],[85,2],[[30,60],61],[[7,57],7],[[7,57,57],7],[[21,19],[[10,[4,4]]]],[26,11],[[2,50],[[10,[11,4]]]],[[2,50],[[10,[11,4]]]],[26,11],[26,11],[[26,60,4],11],[[11,[13,[60]]],11],[[9,4,4],11],[[1,4,4],11],[[2,60],11],[[26,60,4],11],[6,11],[[26,60],11],[[11,[13,[60]]],11],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,50],[[10,[11,4]]]],[[],35],[9,11],[[1,50],[[10,[11,28]]]],[[],65],[[],65],[19,11],[8,11],[[2,50],[[10,[11,4]]]],[[],65],[26,11],[6,11],[30,11],[11,11],[[],65],[35,11],[[],35],[26,11],[11,11],[26,11],[9,[[86,[4]]]],[36,[[86,[48]]]],[37,[[86,[49]]]],[38,[[86,[47]]]],[39,[[86,[50]]]],[40,[[86,[50]]]],[41,[[86,[51]]]],[42,[[86,[52]]]],[43,[[86,[53]]]],[44,[[86,[14]]]],[45,[[86,[54]]]],[46,[[86,[55]]]],[11,11],[11,11],[11,11],[11,11],[11,11],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[4,[[13,[8]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[4,[[13,[6]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[4,[[13,[11]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[4,[[10,[[13,[82]],4]]]],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[4,9],[4,15],[4,16],[4,1],[4,17],[4,18],[4,19],[4,20],[4,8],[4,21],[4,22],[4,23],[4,24],[4,25],[4,2],[4,26],[4,6],[4,27],[4,28],[4,29],[4,30],[4,3],[4,31],[4,32],[4,33],[4,34],[4,5],[4,11],[4,35],[4,7],[4,36],[4,37],[4,38],[4,39],[4,40],[4,41],[4,42],[4,43],[4,44],[4,45],[4,46],[4,9],[4,15],[4,16],[4,1],[4,17],[4,18],[4,19],[4,20],[4,8],[4,21],[4,22],[4,23],[4,24],[4,25],[4,2],[4,26],[4,6],[4,27],[4,28],[4,29],[4,30],[4,3],[4,31],[4,32],[4,33],[4,34],[4,5],[4,11],[4,35],[4,7],[4,36],[4,37],[4,38],[4,39],[4,40],[4,41],[4,42],[4,43],[4,44],[4,45],[4,46],[60,11],[30,61],[[],35],[[9,4],52],[[2,2],2],[[14,14],14],[25,4],[[1,50],1],[17,61],[2,14],[26,14],[6,6],[11,11],[35,35],[9,23],[22,23],[6,9],[3,23],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[],46],[[48,56],36],[[49,56],37],[[47,56],38],[[50,56],39],[[50,56],40],[[51,56],41],[[52,56],42],[[53,56],43],[[14,56],44],[[54,56],45],[[55,56],46],[[4,52,47],[[10,[47,4]]]],[[4,52,47],[[10,[47,4]]]],[[4,52,47,47],[[10,[47,4]]]],[[4,52,47],[[10,[47,4]]]],[52,61],[[4,52],[[10,[47,4]]]],[[38,52],[[10,[52,4]]]],[[38,52,52],[[10,[52,4]]]],[[4,52,47],[[10,[47,4]]]],[[4,52,47],[[10,[47,4]]]],[[4,52,47],[[10,[47,4]]]],[[38,52,47],[[10,[11,4]]]],[[38,52,47,14],[[10,[11,4]]]],[[4,52,47],[[10,[47,4]]]],0,0,0,0,[77,6],[77,77],[77,4],[80,80],[80,6],[80,4],[79,6],[79,4],[79,79],[78,6],[78,4],[78,78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,77],[80,80],[79,79],[78,78],[[]],[[]],[[]],[[]],[77,8],[[],77],[[],80],[[],79],[[],78],[77,6],[80,6],[79,6],[78,6],[[]],[[]],[[]],[[]],[[77,67],68],[[80,67],68],[[79,67],68],[[78,67],68],[80,8],[79,8],[[80,26],9],[[79,14],9],[[]],[4,77],[4,80],[[]],[4,79],[[]],[[]],[4,78],[[],77],[[],80],[[],79],[[],78],[4,9],[4,61],[4,61],[4,61],[4,61],[[]],[[]],[[]],[[]],[77],[77],[80],[80],[79],[79],[78],[78],[[],61],[[],61],[[],61],[[],61],[[9,6],77],[[9,6],80],[[9,6],79],[[9,6],78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,6],[80,6],[79,6],[78,6],[[]],[[]],[[]],[[]],[[78,14],11],[[9,6],9],[[9,6],9],[[9,6],9],[[9,6],9],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],87],[[],87],[[],87],[[],87],[4,77],[4,80],[4,79],[4,78],[4,77],[4,80],[4,79],[4,78],[60,[[10,[4,4]]]],[4,[[10,[11,4]]]],[[4,4],[[10,[11,4]]]],[[4,4,4],[[10,[11,4]]]],[14,14],[14,14],[14,14],[14,14],[14,14],[14,14],[[14,14],14],[14,14],[14,14],[14,14],[47,52],[14,14],[14,14],[14,14],[14,14],[14,14],[14,53],[[14,14],14],[[47,47],47],[14,14],[14,14],[14,14],[14,14],[[14,14],14],[[14,14],14],[[14,14],14],[[],14],[14,14],[14,14],[14,14],[14,14],[14,14],[14,14],[14,14],[14,14],[[8,4,9],[[10,[4,4]]]],[[8,9],[[10,[4,4]]]],[[8,9,8],[[10,[4,4]]]],[[6,4,6],[[10,[61,4]]]],[[6,4],[[10,[61,4]]]],[[4,4],[[10,[4,4]]]],[[4,14],[[10,[4,4]]]],[[6,4],[[10,[4,4]]]],[4,[[10,[6,4]]]],[[4,52],[[10,[4,4]]]],[[4,4],[[10,[61,4]]]],[6,[[10,[61,4]]]],[4,[[10,[9,4]]]],[6,[[10,[61,4]]]],[[4,4,4],[[10,[61,4]]]],[[4,14,4],[[10,[61,4]]]],[[6,4],[[10,[61,4]]]],[[4,52,4],[[10,[61,4]]]],[[4,4,4,4],[[10,[61,4]]]],0,0,0,0,0,0,0,0,[69,4],[69,69],[69,19],[76,76],[76,4],[76,6],[71,4],[71,71],[71,19],[70,19],[70,70],[70,4],[75,75],[75,6],[75,4],[74,6],[74,4],[74,74],[73,6],[73,73],[73,4],[72,4],[72,6],[72,72],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,4],[69,69],[76,76],[71,71],[70,70],[75,75],[74,74],[73,73],[72,72],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,7],[7,7],[[75,60],9],[69,19],[76,6],[71,19],[70,19],[75,6],[74,6],[73,6],[72,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[69,69],61],[[76,76],61],[[71,71],61],[[70,70],61],[[75,75],61],[[74,74],61],[[73,73],61],[[72,72],61],[76,6],[75,9],[[69,67],68],[[76,67],68],[[71,67],68],[[70,67],68],[[75,67],68],[[74,67],68],[[73,67],68],[[72,67],68],[[]],[4,69],[4,76],[[]],[[]],[4,71],[4,70],[[]],[[]],[4,75],[4,74],[[]],[4,73],[[]],[[]],[4,72],[[],69],[[],76],[[],71],[[],70],[[],75],[[],74],[[],73],[[],72],[[74,52],[[10,[8,4]]]],[[74,52],[[10,[52,4]]]],[[72,52],52],[75,9],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[4,61],[6,7],[[75,6],7],[[7,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69],[69],[76],[76],[71],[71],[70],[70],[75],[75],[74],[74],[73],[73],[72],[72],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[74,52],[60,69],[[75,6],[[10,[76,4]]]],[60,71],[60,70],[4,[[10,[75,4]]]],[6,[[10,[74,4]]]],[[6,4],[[10,[73,4]]]],[6,[[10,[72,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[74,52,8],[[10,[4]]]],[[73,4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[4,69],[4,76],[4,71],[4,70],[4,75],[4,74],[4,73],[4,72],[4,69],[4,76],[4,71],[4,70],[4,75],[4,74],[4,73],[4,72],[4,[[10,[61,4]]]],[73,4]],"p":[[3,"BigInt"],[3,"Number"],[3,"Set"],[3,"JsValue"],[3,"WeakSet"],[3,"Object"],[3,"Promise"],[3,"Function"],[3,"Array"],[4,"Result"],[3,"JsString"],[15,"char"],[4,"Option"],[15,"f64"],[3,"ArrayBuffer"],[3,"SharedArrayBuffer"],[3,"Boolean"],[3,"DataView"],[3,"Error"],[3,"EvalError"],[3,"Generator"],[3,"Map"],[3,"Iterator"],[3,"AsyncIterator"],[3,"IteratorNext"],[3,"Date"],[3,"Proxy"],[3,"RangeError"],[3,"ReferenceError"],[3,"RegExp"],[3,"SyntaxError"],[3,"TypeError"],[3,"UriError"],[3,"WeakMap"],[3,"Symbol"],[3,"Int8Array"],[3,"Int16Array"],[3,"Int32Array"],[3,"Uint8Array"],[3,"Uint8ClampedArray"],[3,"Uint16Array"],[3,"Uint32Array"],[3,"Float32Array"],[3,"Float64Array"],[3,"BigInt64Array"],[3,"BigUint64Array"],[15,"i32"],[15,"i8"],[15,"i16"],[15,"u8"],[15,"u16"],[15,"u32"],[15,"f32"],[15,"i64"],[15,"u64"],[15,"usize"],[3,"Closure"],[3,"ArrayIter"],[4,"Ordering"],[15,"str"],[15,"bool"],[15,"u128"],[15,"isize"],[15,"i128"],[3,"String"],[8,"FnMut"],[3,"Formatter"],[6,"Result"],[3,"CompileError"],[3,"RuntimeError"],[3,"LinkError"],[3,"Memory"],[3,"Global"],[3,"Table"],[3,"Module"],[3,"Instance"],[3,"Collator"],[3,"PluralRules"],[3,"NumberFormat"],[3,"DateTimeFormat"],[3,"Iter"],[3,"IntoIter"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[8,"Iterator"],[3,"Vec"],[3,"TypeId"]]},\
"log":{"doc":"A lightweight logging facade.","t":[13,13,13,13,13,13,4,4,8,3,3,13,3,3,3,17,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,10,11,11,11,11,11,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14],"n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","le","le","le","le","level","level","level","level","line","line","log","log","log_enabled","logger","lt","lt","lt","lt","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":["log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","","","","","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","","","","","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,3,7,1,8,4,6,1,8,4,6,8,7,0,19,4,4,6,6,8,7,11,0,1,3,1,3,19,4,4,6,6,1,3,8,7,15,15,11,11,4,6,1,3,8,7,15,11,4,6,4,4,6,6,4,4,6,6,4,6,8,7,0,4,6,1,3,8,7,15,11,4,6,4,4,6,6,1,3,8,7,1,3,19,0,0,0,4,4,6,6,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[8,10],[[4,6],10],[[4,4],10],[[6,4],10],[[6,6],10],[[8,8],10],[[7,7],10],[[11,11],10],0,[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[]],[[4,13],14],[[4,13],14],[[6,13],14],[[6,13],14],[[1,13],14],[[3,13],14],[[8,13],14],[[7,13],14],[[15,13],14],[[15,13],14],[[11,13],14],[[11,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[16,[4]]]],[5,[[16,[6]]]],[[4,4],10],[[4,6],10],[[6,4],10],[[6,6],10],[[4,6],10],[[4,4],10],[[6,4],10],[[6,6],10],[4],[6],[8],[7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[4,6],10],[[4,4],10],[[6,6],10],[[6,4],10],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[12,[18]]]],[[3,[12,[18]]],3],[1],0,0,[[],19],[[4,4],10],[[4,6],10],[[6,6],10],[[6,4],10],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[],3],[[],7],[[4,6],[[12,[9]]]],[[4,4],[[12,[9]]]],[[6,4],[[12,[9]]]],[[6,6],[[12,[9]]]],[[8,8],[[12,[9]]]],[[7,7],[[12,[9]]]],[19,[[16,[15]]]],[19,[[16,[15]]]],[6],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[12,[4]]]],[4,6],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0],"p":[[3,"Record"],[3,"Arguments"],[3,"RecordBuilder"],[4,"Level"],[15,"str"],[4,"LevelFilter"],[3,"MetadataBuilder"],[3,"Metadata"],[4,"Ordering"],[15,"bool"],[3,"ParseLevelError"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"SetLoggerError"],[4,"Result"],[8,"Iterator"],[15,"u32"],[8,"Log"],[3,"TypeId"]]},\
"once_cell":{"doc":"Overview","t":[0,0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["race","sync","unsync","OnceBool","OnceBox","OnceNonZeroUsize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","default","drop","fmt","fmt","fmt","from","from","from","get","get","get","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","new","new","new","set","set","set","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","wait","with_value","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","with_value"],"q":["once_cell","","","once_cell::race","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","once_cell::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","once_cell::unsync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Thread-safe, non-blocking, “first one wins” flavor of …","Thread-safe, blocking version of <code>OnceCell</code>.","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets the reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the mutable reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Gets the reference to the underlying value, blocking the …","Creates a new initialized cell.","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets a mutable reference to the underlying value.","Gets the mutable reference to the result of this lazy …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Creates a new initialized cell."],"i":[0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,13,15,13,15,13,13,13,13,15,15,15,13,13,15,15,15,13,13,13,15,13,15,13,15,13,13,13,13,15,13,15,13,15,13,13,13,13,15,13,13,15,13,15,13,13,0,0,20,21,20,21,20,20,20,20,21,21,21,20,20,21,21,21,20,20,20,21,20,21,20,21,20,20,20,21,20,21,20,21,20,20,20,20,21,20,20,21,20,21,20],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[1],[[1,4],5],[[2,4],5],[[3,4],5],[[]],[[]],[[]],[1,6],[2,[[6,[7]]]],[3,[[6,[8]]]],[1],[2,7],[3,8],[1,9],[2,[[9,[7]]]],[3,[[9,[8]]]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[1,10],[[9,[10]]]],[[2,7],9],[[3,8],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],11],[[],11],[[],11],0,0,[[]],[[]],[[]],[[]],[[[13,[12]]],[[13,[12]]]],[[[13,[12]],[13,[12]]]],[[]],[[],13],[[],[[15,[14]]]],[[[15,[16]]]],[[[15,[16]]]],[[[13,[17]],13],8],[[[13,[18]],4],5],[[[15,[18]],4],5],[15],[15],[[],13],[19],[[]],[[]],[13,6],[15,6],[13,6],[15,6],[13],[13,9],[13],[[]],[[]],[13,6],[15,9],[[],13],[[],15],[13,9],[13,6],[[]],[[],9],[[],9],[13,9],[[],9],[[],9],[[],11],[[],11],[13],[[],13],0,0,[[]],[[]],[[]],[[]],[[[20,[12]]],[[20,[12]]]],[[[20,[12]],[20,[12]]]],[[]],[[],20],[[],[[21,[14]]]],[[[21,[16]]]],[[[21,[16]]]],[[[20,[17]],[20,[17]]],8],[[[20,[18]],4],5],[[[21,[18]],4],5],[21],[21],[[]],[19],[[],20],[[]],[20,6],[21,6],[20,6],[21,6],[20],[20,9],[[]],[[]],[20,6],[21,9],[[],20],[[],21],[20,9],[20,6],[[]],[[],9],[[],9],[20,9],[[],9],[[],9],[[],11],[[],11],[[],20]],"p":[[3,"OnceBox"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"NonZeroUsize"],[15,"bool"],[4,"Result"],[3,"Box"],[3,"TypeId"],[8,"Clone"],[3,"OnceCell"],[8,"Default"],[3,"Lazy"],[8,"FnOnce"],[8,"PartialEq"],[8,"Debug"],[15,"never"],[3,"OnceCell"],[3,"Lazy"]]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":[13,13,13,4,3,13,3,13,13,3,3,13,13,13,3,13,4,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delimiter","eq","eq","eq","eq","extend","extend","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","provide","resolved_at","set_span","set_span","set_span","set_span","set_span","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","0","0","0","0","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":["proc_macroproc_macro2::TokenTree","","","","proc_macro2::token_stream","","","","","","","","","","","","","","",""],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns the delimiter of this <code>Group</code>","","","","","","","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[9,8,8,0,0,6,0,6,9,0,0,6,8,8,0,6,0,0,0,0,1,16,5,4,6,7,8,1,9,10,3,16,5,4,6,7,8,1,9,10,3,3,4,3,5,4,6,7,8,1,9,10,3,5,4,6,7,8,1,9,10,3,10,5,7,8,9,10,10,5,5,3,3,3,3,16,16,5,5,4,6,6,7,7,8,1,1,9,10,10,3,3,16,5,5,5,4,4,6,6,6,6,6,7,8,1,9,10,3,5,5,5,3,10,3,3,3,3,3,3,3,3,3,3,16,5,4,6,7,8,1,9,10,3,5,5,3,3,4,4,4,5,7,1,10,10,10,16,4,6,7,1,10,3,1,16,6,7,1,10,3,7,7,7,3,3,5,4,6,7,8,1,9,10,3,16,5,6,7,1,10,3,0,16,5,4,6,7,8,1,9,10,3,16,5,4,6,7,8,1,9,10,3,16,5,4,6,7,8,1,9,10,3,3,3,3,3,3,3,3,3,3,3,4,3,3,41,42,43,44,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],4],[2,3],[5,5],[4,4],[6,6],[7,7],[8,8],[1,1],[9,9],[10,10],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,10],11],[[],5],[7,8],[[8,8],12],[[9,9],12],[10,12],[[10,10],12],[[5,13]],[[5,13]],[14,3],[14,3],[15,3],[15,3],[[16,17],18],[[16,17],18],[[5,17],18],[[5,17],18],[[4,17],18],[[6,17],18],[[6,17],18],[[7,17],18],[[7,17],18],[[8,17],18],[[1,17],18],[[1,17],18],[[9,17],18],[[10,17],18],[[10,17],18],[[3,17],18],[[3,17],18],[[]],[19,5],[6,5],[[]],[20,4],[[]],[10,6],[3,6],[1,6],[7,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,5],[13,5],[21,[[22,[5,16]]]],[21,[[22,[3,16]]]],[10],[23,3],[23,3],[24,3],[24,3],[25,3],[25,3],[26,3],[26,3],[27,3],[27,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,28],[5,12],[29,3],[29,3],[[4,4],[[30,[4]]]],[[4,4],4],[[],4],[[],5],[[8,5],7],[[2,9],1],[[21,4],10],[[21,4],10],[[10,10],[[30,[11]]]],[31],[[4,4],4],[[6,4]],[[7,4]],[[1,4]],[[10,4]],[[3,4]],[1,9],[16,4],[6,4],[7,4],[1,4],[10,4],[3,4],[7,4],[7,4],[7,5],[21,3],[[3,[33,[32]]],[[30,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[36,3],[36,3],[37,3],[37,3],[38,3],[38,3],[39,3],[39,3],[40,3],[40,3],[4,20],[32,3],[32,3],0,0,0,0,0,0,[[]],[[]],[28,28],[[]],[[28,17],18],[[]],[[]],[[]],[28,[[30,[6]]]],[28],[[]],[[],22],[[],22],[[],35]],"p":[[3,"Punct"],[15,"char"],[3,"Literal"],[3,"Span"],[3,"TokenStream"],[4,"TokenTree"],[3,"Group"],[4,"Delimiter"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[15,"bool"],[8,"IntoIterator"],[15,"f32"],[15,"f64"],[3,"LexError"],[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[15,"str"],[4,"Result"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter"],[15,"isize"],[4,"Option"],[3,"Demand"],[15,"usize"],[8,"RangeBounds"],[3,"String"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u8"],[13,"Group"],[13,"Ident"],[13,"Punct"],[13,"Literal"]]},\
"quote":{"doc":"github crates-io docs-rs","t":[8,8,8,10,10,10,10,10,14,11,11,14,14,11,11,11,11,10],"n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":["quote","","","","","","","","","","","","","","","","",""],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,6,6,6,6,7,0,8,8,0,0,7,7,8,8,8],"f":[0,0,0,[[]],[[]],[[]],[[]],[1,2],0,[[],3],[[],3],0,0,[[],[[5,[4]]]],[[],[[5,[4]]]],[[],3],[[],3],[3]],"p":[[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[4,"Option"],[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"syn":{"doc":"github crates-io docs-rs","t":[3,13,13,13,13,3,3,13,13,13,13,13,4,3,6,13,13,3,4,13,3,13,13,13,13,13,13,13,3,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,13,13,13,13,4,3,3,3,13,13,3,13,13,13,13,13,13,3,4,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,3,13,3,3,4,3,3,3,13,13,13,4,13,4,3,3,3,3,13,13,4,4,4,3,13,13,13,13,13,13,3,13,13,13,3,4,3,3,3,3,13,3,13,13,13,13,13,4,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,13,3,13,13,13,13,3,13,4,13,13,13,3,3,3,3,3,3,3,3,13,13,13,3,13,13,13,13,13,13,13,13,4,13,13,4,4,13,3,3,13,13,13,3,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,13,13,13,13,13,4,3,3,3,3,13,13,3,13,13,4,13,3,13,13,13,13,13,13,13,13,13,13,6,13,4,13,13,13,13,13,3,13,13,13,13,4,13,4,13,13,13,13,13,13,14,13,13,13,3,4,4,3,3,3,3,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,13,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,3,13,4,13,13,13,13,13,13,13,13,3,3,3,3,3,4,3,3,13,13,13,13,13,13,13,13,3,3,3,4,3,4,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,12,12,12,12,12,12,12,14,12,0,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,14,14,12,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,11,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,14,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,5,11,14,11,11,11,11,14,14,5,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,18,10,3,3,3,16,8,3,6,8,8,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,13,3,3,3,3,4,3,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,8,10,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11,5,11,11],"n":["Abi","Add","AddEq","And","AngleBracketed","AngleBracketedGenericArguments","Arm","Array","Array","Assign","AssignOp","Async","AttrStyle","Attribute","AttributeArgs","Await","BareFn","BareFnArg","BinOp","Binary","Binding","Binding","BitAnd","BitAndEq","BitOr","BitOrEq","BitXor","BitXorEq","Block","Block","Bool","BoundLifetimes","Box","Box","Brace","Bracket","Break","Byte","ByteStr","Call","Cast","Char","Closed","Closure","Const","Const","Const","Const","Const","Const","ConstParam","Constraint","Constraint","Continue","Cooked","Crate","Data","DataEnum","DataStruct","DataUnion","Default","Deref","DeriveInput","Div","DivEq","Enum","Enum","Eq","Eq","Error","Expr","Expr","ExprArray","ExprAssign","ExprAssignOp","ExprAsync","ExprAwait","ExprBinary","ExprBlock","ExprBox","ExprBreak","ExprCall","ExprCast","ExprClosure","ExprContinue","ExprField","ExprForLoop","ExprGroup","ExprIf","ExprIndex","ExprLet","ExprLit","ExprLoop","ExprMacro","ExprMatch","ExprMethodCall","ExprParen","ExprPath","ExprRange","ExprReference","ExprRepeat","ExprReturn","ExprStruct","ExprTry","ExprTryBlock","ExprTuple","ExprType","ExprUnary","ExprUnsafe","ExprWhile","ExprYield","ExternCrate","Field","Field","FieldPat","FieldValue","Fields","FieldsNamed","FieldsUnnamed","File","Float","Fn","Fn","FnArg","ForLoop","ForeignItem","ForeignItemFn","ForeignItemMacro","ForeignItemStatic","ForeignItemType","ForeignMod","Ge","GenericArgument","GenericMethodArgument","GenericParam","Generics","Glob","Group","Group","Group","Gt","HalfOpen","Ident","Ident","If","Impl","ImplGenerics","ImplItem","ImplItemConst","ImplItemMacro","ImplItemMethod","ImplItemType","ImplTrait","Index","Index","Infer","Inherited","Inner","Int","Item","Item","ItemConst","ItemEnum","ItemExternCrate","ItemFn","ItemForeignMod","ItemImpl","ItemMacro","ItemMacro2","ItemMod","ItemStatic","ItemStruct","ItemTrait","ItemTraitAlias","ItemType","ItemUnion","ItemUse","Label","Le","Let","Lifetime","Lifetime","Lifetime","Lifetime","Lifetime","LifetimeDef","List","Lit","Lit","Lit","Lit","LitBool","LitByte","LitByteStr","LitChar","LitFloat","LitInt","LitStr","Local","Local","Loop","Lt","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro","Macro2","MacroDelimiter","Match","Maybe","Member","Meta","Meta","MetaList","MetaNameValue","Method","Method","MethodCall","MethodTurbofish","Mod","Mul","MulEq","Name","NameValue","Named","Named","Ne","Neg","NestedMeta","Never","None","None","Not","Or","Or","Outer","Paren","Paren","Paren","Parenthesized","ParenthesizedGenericArguments","Pat","PatBox","PatIdent","PatLit","PatMacro","PatOr","PatPath","PatRange","PatReference","PatRest","PatSlice","PatStruct","PatTuple","PatTupleStruct","PatType","PatWild","Path","Path","Path","Path","Path","Path","PathArguments","PathSegment","PredicateEq","PredicateLifetime","PredicateType","Ptr","Public","QSelf","Range","Range","RangeLimits","Raw","Receiver","Receiver","Reference","Reference","Reference","Rem","RemEq","Rename","Repeat","Rest","Restricted","Result","Return","ReturnType","Semi","Shl","ShlEq","Shr","ShrEq","Signature","Slice","Slice","Static","Static","Stmt","Str","StrStyle","Struct","Struct","Struct","Struct","Sub","SubEq","Token","Trait","Trait","TraitAlias","TraitBound","TraitBoundModifier","TraitItem","TraitItemConst","TraitItemMacro","TraitItemMethod","TraitItemType","TraitObject","Try","TryBlock","Tuple","Tuple","Tuple","TupleStruct","Turbofish","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","Type","TypeArray","TypeBareFn","TypeGenerics","TypeGroup","TypeImplTrait","TypeInfer","TypeMacro","TypeNever","TypeParam","TypeParamBound","TypeParen","TypePath","TypePtr","TypeReference","TypeSlice","TypeTraitObject","TypeTuple","Typed","UnOp","Unary","Union","Union","Unit","Unnamed","Unnamed","Unsafe","Use","UseGlob","UseGroup","UseName","UsePath","UseRename","UseTree","Variadic","Variant","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","Verbatim","VisCrate","VisPublic","VisRestricted","Visibility","WhereClause","WherePredicate","While","Wild","Yield","abi","abi","abi","and_token","and_token","and_token","apostrophe","args","args","args","args","arguments","arms","as_token","as_token","as_token","as_turbofish","async_token","asyncness","asyncness","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","auto_token","await_token","bang_token","bang_token","base","base","base10_digits","base10_digits","base10_parse","base10_parse","block","block","block","block","block","block","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded_ty","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","box_token","box_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","brace_token","braced","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracket_token","bracketed","break_token","buffer","by_ref","capture","capture","cases","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","colon2_token","colon2_token","colon2_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","comma","cond","cond","const_params","const_params_mut","const_token","const_token","const_token","const_token","const_token","constness","content","continue_token","crate_token","crate_token","custom_keyword","custom_punctuation","data","default","default","default","default","default","default","default","default","defaultness","defaultness","defaultness","defaultness","delimiter","discriminant","dot2_token","dot2_token","dot2_token","dot_token","dot_token","dot_token","dots","dyn_token","elem","elem","elem","elem","elem","elem","elems","elems","elems","elems","elems","else_branch","enum_token","enum_token","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","ext","extern_token","extern_token","fat_arrow_token","fields","fields","fields","fields","fields","fields","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","for_token","for_token","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","func","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","generics","get_ident","group_token","group_token","gt_token","gt_token","gt_token","gt_token","gt_token","guard","hash","hash","hash","hash","hi","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","ident","if_token","impl_token","impl_token","in_token","in_token","index","index","init","inputs","inputs","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","is_ident","is_none","items","items","items","items","items","iter","iter_mut","label","label","label","label","label","label","leading_colon","leading_colon","leading_vert","left","left","left","len","len","len","let_token","let_token","lhs_ty","lifetime","lifetime","lifetime","lifetime","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes","lifetimes_mut","limits","limits","lit","lit","lo","loop_token","lt_token","lt_token","lt_token","lt_token","lt_token","mac","mac","mac","mac","mac","mac","mac","macro_token","make_where_clause","match_token","member","member","member","method","mod_token","modifier","movability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","mutability","name","name","name","named","nested","new","new","new","new","new","new","new","new","new","new","new","new_raw","op","op","op","or1_token","or2_token","output","output","output","output","params","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","paren_token","parenthesized","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse2","parse_any","parse_args","parse_args_with","parse_body","parse_body_with","parse_file","parse_inner","parse_macro_input","parse_meta","parse_mod_style","parse_named","parse_outer","parse_quote","parse_quote_spanned","parse_str","parse_unnamed","parse_with","parse_within","parse_without_eager_brace","partial_cmp","partial_cmp","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path","path","position","pound_token","predicates","pub_token","pub_token","punctuated","qself","qself","qself","question_token","raw","receiver","receiver","reference","rename","rename","rest","return_token","rhs_ty","right","right","right","rules","segments","self_token","self_ty","semi","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","semi_token","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","set_span","shebang","sig","sig","sig","sig","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned","split_for_impl","star_token","star_token","static_token","static_token","stmts","struct_token","struct_token","style","subpat","suffix","suffix","suffix","suffix","suffix","suffix","suffix","supertraits","then_branch","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","token","token","token","token","token","token","token","token","tokens","tokens","trait_","trait_token","trait_token","tree","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","turbofish","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params_mut","type_token","type_token","type_token","type_token","underscore_token","underscore_token","union_token","union_token","unnamed","unraw","unsafe_token","unsafety","unsafety","unsafety","unsafety","use_token","value","value","value","value","value","value","variadic","variadic","variants","variants","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","vis","visit","where_clause","where_token","while_token","without_plus","without_plus","without_plus","without_plus","yield_tokenursor","TokenBuffer","begin","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","empty","eof","eq","from","from","group","ident","into","into","lifetime","literal","new","new2","partial_cmp","punct","span","to_owned","token_stream","token_tree","try_from","try_from","try_into","try_into","type_id","type_id","IdentExt","parse_any","peek_any","unraw","Error","Lookahead1","Nothing","Output","Parse","ParseBuffer","ParseStream","Parser","Peek","Result","StepCursor","advance_to","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","combine","cursor","deref","discouraged","drop","error","error","error","extend","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","into","into","into","into","into","into_compile_error","into_iter","into_iter","is_empty","lookahead1","new","new_spanned","parse","parse","parse","parse","parse2","parse_str","parse_terminated","peek","peek","peek2","peek3","provide","span","span","step","to_compile_error","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Speculative","advance_to","End","IntoIter","IntoPairs","Iter","IterMut","Pair","Pairs","PairsMut","Punctuated","Punctuated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","empty_or_trailing","extend","extend","first","first_mut","from","from","from","from","from","from","from","from","from_iter","from_iter","index","index_mut","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_pairs","into_tuple","into_value","is_empty","iter","iter_mut","last","last_mut","len","len","len","len","len","len","len","new","new","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","pairs","pairs_mut","parse_separated_nonempty","parse_separated_nonempty_with","parse_terminated","parse_terminated_with","pop","punct","punct_mut","push","push_punct","push_value","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","trailing_punct","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_mut","0","0","1","Spanned","span","Abstract","Add","AddEq","And","AndAnd","AndEq","As","Async","At","Auto","Await","Bang","Become","Box","Brace","Bracket","Break","Caret","CaretEq","Colon","Colon2","Comma","Const","Continue","Crate","Default","Div","DivEq","Do","Dollar","Dot","Dot2","Dot3","DotDotEq","Dyn","Else","Enum","Eq","EqEq","Extern","FatArrow","Final","Fn","For","Ge","Group","Gt","If","Impl","In","LArrow","Le","Let","Loop","Lt","Macro","Match","Mod","Move","MulEq","Mut","Ne","Or","OrEq","OrOr","Override","Paren","Pound","Priv","Pub","Question","RArrow","Ref","Rem","RemEq","Return","SelfType","SelfValue","Semi","Shl","ShlEq","Shr","ShrEq","Star","Static","Struct","Sub","SubEq","Super","Tilde","Token","Trait","Try","Type","Typeof","Underscore","Union","Unsafe","Unsized","Use","Virtual","Where","While","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","spans","surround","surround","surround","surround","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Visit","visit_abi","visit_abi","visit_abi","visit_angle_bracketed_generic_arguments","visit_angle_bracketed_generic_arguments","visit_angle_bracketed_generic_arguments","visit_arm","visit_arm","visit_arm","visit_attr_style","visit_attr_style","visit_attr_style","visit_attribute","visit_attribute","visit_attribute","visit_bare_fn_arg","visit_bare_fn_arg","visit_bare_fn_arg","visit_bin_op","visit_bin_op","visit_bin_op","visit_binding","visit_binding","visit_binding","visit_block","visit_block","visit_block","visit_bound_lifetimes","visit_bound_lifetimes","visit_bound_lifetimes","visit_const_param","visit_const_param","visit_const_param","visit_constraint","visit_constraint","visit_constraint","visit_data","visit_data","visit_data","visit_data_enum","visit_data_enum","visit_data_enum","visit_data_struct","visit_data_struct","visit_data_struct","visit_data_union","visit_data_union","visit_data_union","visit_derive_input","visit_derive_input","visit_derive_input","visit_expr","visit_expr","visit_expr","visit_expr_array","visit_expr_array","visit_expr_array","visit_expr_assign","visit_expr_assign","visit_expr_assign","visit_expr_assign_op","visit_expr_assign_op","visit_expr_assign_op","visit_expr_async","visit_expr_async","visit_expr_async","visit_expr_await","visit_expr_await","visit_expr_await","visit_expr_binary","visit_expr_binary","visit_expr_binary","visit_expr_block","visit_expr_block","visit_expr_block","visit_expr_box","visit_expr_box","visit_expr_box","visit_expr_break","visit_expr_break","visit_expr_break","visit_expr_call","visit_expr_call","visit_expr_call","visit_expr_cast","visit_expr_cast","visit_expr_cast","visit_expr_closure","visit_expr_closure","visit_expr_closure","visit_expr_continue","visit_expr_continue","visit_expr_continue","visit_expr_field","visit_expr_field","visit_expr_field","visit_expr_for_loop","visit_expr_for_loop","visit_expr_for_loop","visit_expr_group","visit_expr_group","visit_expr_group","visit_expr_if","visit_expr_if","visit_expr_if","visit_expr_index","visit_expr_index","visit_expr_index","visit_expr_let","visit_expr_let","visit_expr_let","visit_expr_lit","visit_expr_lit","visit_expr_lit","visit_expr_loop","visit_expr_loop","visit_expr_loop","visit_expr_macro","visit_expr_macro","visit_expr_macro","visit_expr_match","visit_expr_match","visit_expr_match","visit_expr_method_call","visit_expr_method_call","visit_expr_method_call","visit_expr_paren","visit_expr_paren","visit_expr_paren","visit_expr_path","visit_expr_path","visit_expr_path","visit_expr_range","visit_expr_range","visit_expr_range","visit_expr_reference","visit_expr_reference","visit_expr_reference","visit_expr_repeat","visit_expr_repeat","visit_expr_repeat","visit_expr_return","visit_expr_return","visit_expr_return","visit_expr_struct","visit_expr_struct","visit_expr_struct","visit_expr_try","visit_expr_try","visit_expr_try","visit_expr_try_block","visit_expr_try_block","visit_expr_try_block","visit_expr_tuple","visit_expr_tuple","visit_expr_tuple","visit_expr_type","visit_expr_type","visit_expr_type","visit_expr_unary","visit_expr_unary","visit_expr_unary","visit_expr_unsafe","visit_expr_unsafe","visit_expr_unsafe","visit_expr_while","visit_expr_while","visit_expr_while","visit_expr_yield","visit_expr_yield","visit_expr_yield","visit_field","visit_field","visit_field","visit_field_pat","visit_field_pat","visit_field_pat","visit_field_value","visit_field_value","visit_field_value","visit_fields","visit_fields","visit_fields","visit_fields_named","visit_fields_named","visit_fields_named","visit_fields_unnamed","visit_fields_unnamed","visit_fields_unnamed","visit_file","visit_file","visit_file","visit_fn_arg","visit_fn_arg","visit_fn_arg","visit_foreign_item","visit_foreign_item","visit_foreign_item","visit_foreign_item_fn","visit_foreign_item_fn","visit_foreign_item_fn","visit_foreign_item_macro","visit_foreign_item_macro","visit_foreign_item_macro","visit_foreign_item_static","visit_foreign_item_static","visit_foreign_item_static","visit_foreign_item_type","visit_foreign_item_type","visit_foreign_item_type","visit_generic_argument","visit_generic_argument","visit_generic_argument","visit_generic_method_argument","visit_generic_method_argument","visit_generic_method_argument","visit_generic_param","visit_generic_param","visit_generic_param","visit_generics","visit_generics","visit_generics","visit_ident","visit_ident","visit_ident","visit_impl_item","visit_impl_item","visit_impl_item","visit_impl_item_const","visit_impl_item_const","visit_impl_item_const","visit_impl_item_macro","visit_impl_item_macro","visit_impl_item_macro","visit_impl_item_method","visit_impl_item_method","visit_impl_item_method","visit_impl_item_type","visit_impl_item_type","visit_impl_item_type","visit_index","visit_index","visit_index","visit_item","visit_item","visit_item","visit_item_const","visit_item_const","visit_item_const","visit_item_enum","visit_item_enum","visit_item_enum","visit_item_extern_crate","visit_item_extern_crate","visit_item_extern_crate","visit_item_fn","visit_item_fn","visit_item_fn","visit_item_foreign_mod","visit_item_foreign_mod","visit_item_foreign_mod","visit_item_impl","visit_item_impl","visit_item_impl","visit_item_macro","visit_item_macro","visit_item_macro","visit_item_macro2","visit_item_macro2","visit_item_macro2","visit_item_mod","visit_item_mod","visit_item_mod","visit_item_static","visit_item_static","visit_item_static","visit_item_struct","visit_item_struct","visit_item_struct","visit_item_trait","visit_item_trait","visit_item_trait","visit_item_trait_alias","visit_item_trait_alias","visit_item_trait_alias","visit_item_type","visit_item_type","visit_item_type","visit_item_union","visit_item_union","visit_item_union","visit_item_use","visit_item_use","visit_item_use","visit_label","visit_label","visit_label","visit_lifetime","visit_lifetime","visit_lifetime","visit_lifetime_def","visit_lifetime_def","visit_lifetime_def","visit_lit","visit_lit","visit_lit","visit_lit_bool","visit_lit_bool","visit_lit_bool","visit_lit_byte","visit_lit_byte","visit_lit_byte","visit_lit_byte_str","visit_lit_byte_str","visit_lit_byte_str","visit_lit_char","visit_lit_char","visit_lit_char","visit_lit_float","visit_lit_float","visit_lit_float","visit_lit_int","visit_lit_int","visit_lit_int","visit_lit_str","visit_lit_str","visit_lit_str","visit_local","visit_local","visit_local","visit_macro","visit_macro","visit_macro","visit_macro_delimiter","visit_macro_delimiter","visit_macro_delimiter","visit_member","visit_member","visit_member","visit_meta","visit_meta","visit_meta","visit_meta_list","visit_meta_list","visit_meta_list","visit_meta_name_value","visit_meta_name_value","visit_meta_name_value","visit_method_turbofish","visit_method_turbofish","visit_method_turbofish","visit_nested_meta","visit_nested_meta","visit_nested_meta","visit_parenthesized_generic_arguments","visit_parenthesized_generic_arguments","visit_parenthesized_generic_arguments","visit_pat","visit_pat","visit_pat","visit_pat_box","visit_pat_box","visit_pat_box","visit_pat_ident","visit_pat_ident","visit_pat_ident","visit_pat_lit","visit_pat_lit","visit_pat_lit","visit_pat_macro","visit_pat_macro","visit_pat_macro","visit_pat_or","visit_pat_or","visit_pat_or","visit_pat_path","visit_pat_path","visit_pat_path","visit_pat_range","visit_pat_range","visit_pat_range","visit_pat_reference","visit_pat_reference","visit_pat_reference","visit_pat_rest","visit_pat_rest","visit_pat_rest","visit_pat_slice","visit_pat_slice","visit_pat_slice","visit_pat_struct","visit_pat_struct","visit_pat_struct","visit_pat_tuple","visit_pat_tuple","visit_pat_tuple","visit_pat_tuple_struct","visit_pat_tuple_struct","visit_pat_tuple_struct","visit_pat_type","visit_pat_type","visit_pat_type","visit_pat_wild","visit_pat_wild","visit_pat_wild","visit_path","visit_path","visit_path","visit_path_arguments","visit_path_arguments","visit_path_arguments","visit_path_segment","visit_path_segment","visit_path_segment","visit_predicate_eq","visit_predicate_eq","visit_predicate_eq","visit_predicate_lifetime","visit_predicate_lifetime","visit_predicate_lifetime","visit_predicate_type","visit_predicate_type","visit_predicate_type","visit_qself","visit_qself","visit_qself","visit_range_limits","visit_range_limits","visit_range_limits","visit_receiver","visit_receiver","visit_receiver","visit_return_type","visit_return_type","visit_return_type","visit_signature","visit_signature","visit_signature","visit_span","visit_span","visit_span","visit_stmt","visit_stmt","visit_stmt","visit_trait_bound","visit_trait_bound","visit_trait_bound","visit_trait_bound_modifier","visit_trait_bound_modifier","visit_trait_bound_modifier","visit_trait_item","visit_trait_item","visit_trait_item","visit_trait_item_const","visit_trait_item_const","visit_trait_item_const","visit_trait_item_macro","visit_trait_item_macro","visit_trait_item_macro","visit_trait_item_method","visit_trait_item_method","visit_trait_item_method","visit_trait_item_type","visit_trait_item_type","visit_trait_item_type","visit_type","visit_type","visit_type","visit_type_array","visit_type_array","visit_type_array","visit_type_bare_fn","visit_type_bare_fn","visit_type_bare_fn","visit_type_group","visit_type_group","visit_type_group","visit_type_impl_trait","visit_type_impl_trait","visit_type_impl_trait","visit_type_infer","visit_type_infer","visit_type_infer","visit_type_macro","visit_type_macro","visit_type_macro","visit_type_never","visit_type_never","visit_type_never","visit_type_param","visit_type_param","visit_type_param","visit_type_param_bound","visit_type_param_bound","visit_type_param_bound","visit_type_paren","visit_type_paren","visit_type_paren","visit_type_path","visit_type_path","visit_type_path","visit_type_ptr","visit_type_ptr","visit_type_ptr","visit_type_reference","visit_type_reference","visit_type_reference","visit_type_slice","visit_type_slice","visit_type_slice","visit_type_trait_object","visit_type_trait_object","visit_type_trait_object","visit_type_tuple","visit_type_tuple","visit_type_tuple","visit_un_op","visit_un_op","visit_un_op","visit_use_glob","visit_use_glob","visit_use_glob","visit_use_group","visit_use_group","visit_use_group","visit_use_name","visit_use_name","visit_use_name","visit_use_path","visit_use_path","visit_use_path","visit_use_rename","visit_use_rename","visit_use_rename","visit_use_tree","visit_use_tree","visit_use_tree","visit_variadic","visit_variadic","visit_variadic","visit_variant","visit_variant","visit_variant","visit_vis_crate","visit_vis_crate","visit_vis_crate","visit_vis_public","visit_vis_public","visit_vis_public","visit_vis_restricted","visit_vis_restricted","visit_vis_restricted","visit_visibility","visit_visibility","visit_visibility","visit_where_clause","visit_where_clause","visit_where_clause","visit_where_predicate","visit_where_predicate","visit_where_predicate"],"q":["synsyn::AttrStyle","syn::BinOp","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::Data","","","syn::Expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::Fields","","syn::FnArg","","syn::ForeignItem","","","","","syn::GenericArgument","","","","","syn::GenericMethodArgument","","syn::GenericParam","","","syn::ImplItem","","","","","syn::Item","","","","","","","","","","","","","","","","","syn::Lit","","","","","","","","syn::MacroDelimiter","","","syn::Member","","syn::Meta","","","syn::NestedMeta","","syn::Pat","","","","","","","","","","","","","","","","syn::PathArguments","","syn::RangeLimits","","syn::ReturnType","","syn::Stmt","","","","","syn::StrStyle","syn::TraitBoundModifier","syn::TraitItem","","","","","syn::Type","","","","","","","","","","","","","","","syn::TypeParamBound","","syn::UnOp","","","syn::UseTree","","","","","syn::Visibility","","","syn::WherePredicate","","","syn::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::ext","","","","syn::parse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::parse::discouraged","","syn::punctuated","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syn::punctuated::Pair","","","syn::spanned","","syn::tokensyn::visitd":["The binary interface of a function: <code>extern &quot;C&quot;</code>.","The <code>+</code> operator (addition)","The <code>+=</code> operator","The <code>&amp;&amp;</code> operator (logical and)","The <code>&lt;&#39;a, T&gt;</code> in <code>std::slice::iter&lt;&#39;a, T&gt;</code>.","Angle bracketed arguments of a path segment: the <code>&lt;K, V&gt;</code> in …","One arm of a <code>match</code> expression: <code>0...10 =&gt; { return true; }</code>.","A slice literal expression: <code>[a, b, c, d]</code>.","A fixed size array type: <code>[T; n]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","Distinguishes between attributes that decorate an item and …","An attribute like <code>#[repr(transparent)]</code>.","Conventional argument type associated with an invocation …","An await expression: <code>fut.await</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","An argument in a function type: the <code>usize</code> in …","A binary operator: <code>+</code>, <code>+=</code>, <code>&amp;</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A binding (equality constraint) on an associated type: …","A binding (equality constraint) on an associated type: the …","The <code>&amp;</code> operator (bitwise and)","The <code>&amp;=</code> operator","The <code>|</code> operator (bitwise or)","The <code>|=</code> operator","The <code>^</code> operator (bitwise xor)","The <code>^=</code> operator","A braced block containing Rust statements.","A blocked scope: <code>{ ... }</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A set of bound lifetimes: <code>for&lt;&#39;a, &#39;b, &#39;c&gt;</code>.","A box expression: <code>box f</code>.","A box pattern: <code>box v</code>.","","","A <code>break</code>, with an optional label to break and an optional …","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A character literal: <code>&#39;a&#39;</code>.","Inclusive at the beginning and end.","A closure expression: <code>|a, b| a + b</code>.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","A constant item: <code>const MAX: u16 = 65535</code>.","An associated constant within the definition of a trait.","An associated constant within an impl block.","A const expression. Must be inside of a block.","A const generic parameter: <code>const LENGTH: usize</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","An associated type bound: <code>Iterator&lt;Item: Display&gt;</code>.","A <code>continue</code>, with an optional label.","An ordinary string like <code>&quot;data&quot;</code>.","A crate-level visibility: <code>crate</code>.","The storage of a struct, enum or union data structure.","An enum input to a <code>proc_macro_derive</code> macro.","A struct input to a <code>proc_macro_derive</code> macro.","An untagged union input to a <code>proc_macro_derive</code> macro.","Return type is not specified.","The <code>*</code> operator for dereferencing","Data structure sent to a <code>proc_macro_derive</code> macro.","The <code>/</code> operator (division)","The <code>/=</code> operator","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An enum input to a <code>proc_macro_derive</code> macro.","An equality predicate in a <code>where</code> clause (unsupported).","The <code>==</code> operator (equality)","Error returned when a Syn parser cannot parse the input …","A Rust expression.","Expr without trailing semicolon.","A slice literal expression: <code>[a, b, c, d]</code>.","An assignment expression: <code>a = compute()</code>.","A compound assignment expression: <code>counter += 1</code>.","An async block: <code>async { ... }</code>.","An await expression: <code>fut.await</code>.","A binary operation: <code>a + b</code>, <code>a * b</code>.","A blocked scope: <code>{ ... }</code>.","A box expression: <code>box f</code>.","A <code>break</code>, with an optional label to break and an optional …","A function call expression: <code>invoke(a, b)</code>.","A cast expression: <code>foo as f64</code>.","A closure expression: <code>|a, b| a + b</code>.","A <code>continue</code>, with an optional label.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A for loop: <code>for pat in expr { ... }</code>.","An expression contained within invisible delimiters.","An <code>if</code> expression with an optional <code>else</code> block: …","A square bracketed indexing expression: <code>vector[2]</code>.","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","Conditionless loop: <code>loop { ... }</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","A parenthesized expression: <code>(a + b)</code>.","A path like <code>std::mem::replace</code> possibly containing generic …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","An array literal constructed from one repeated element: …","A <code>return</code>, with an optional value to be returned.","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A type ascription expression: <code>foo: f64</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","An unsafe block: <code>unsafe { ... }</code>.","A while loop: <code>while expr { ... }</code>.","A yield expression: <code>yield expr</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A field of a struct or enum variant.","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …","A single field in a struct pattern.","A field-value pair in a struct literal.","Data stored within an enum variant or struct.","Named fields of a struct or struct variant such as …","Unnamed fields of a tuple struct or tuple variant such as …","A complete file of Rust source code.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","A free-standing function: …","A foreign function in an <code>extern</code> block.","An argument in a function signature: the <code>n: usize</code> in …","A for loop: <code>for pat in expr { ... }</code>.","An item within an <code>extern</code> block.","A foreign function in an <code>extern</code> block.","A macro invocation within an extern block.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A foreign type in an <code>extern</code> block: <code>type void</code>.","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","The <code>&gt;=</code> operator (greater than or equal to)","An individual generic argument, like <code>&#39;a</code>, <code>T</code>, or <code>Item = T</code>.","An individual generic argument to a method, like <code>T</code>.","A generic type parameter, lifetime, or const generic: …","Lifetimes and type parameters attached to a declaration of …","A glob import in a <code>use</code> item: <code>*</code>.","An expression contained within invisible delimiters.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","A type contained within invisible delimiters.","The <code>&gt;</code> operator (greater than)","Inclusive at the beginning, exclusive at the end.","A word of Rust code, which may be a keyword or legal …","A pattern that binds a new variable: …","An <code>if</code> expression with an optional <code>else</code> block: …","An impl block providing trait or associated items: …","Returned by <code>Generics::split_for_impl</code>.","An item within an impl block.","An associated constant within an impl block.","A macro invocation within an impl block.","A method within an impl block.","An associated type within an impl block.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","The index of an unnamed tuple struct field.","A square bracketed indexing expression: <code>vector[2]</code>.","Indication that a type should be inferred by the compiler: …","An inherited visibility, which usually means private.","","An integer literal: <code>1</code> or <code>1u16</code>.","Things that can appear directly inside of a module or …","An item definition.","A constant item: <code>const MAX: u16 = 65535</code>.","An enum definition: <code>enum Foo&lt;A, B&gt; { A(A), B(B) }</code>.","An <code>extern crate</code> item: <code>extern crate serde</code>.","A free-standing function: …","A block of foreign items: <code>extern &quot;C&quot; { ... }</code>.","An impl block providing trait or associated items: …","A macro invocation, which includes <code>macro_rules!</code> …","A 2.0-style declarative macro introduced by the <code>macro</code> …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A type alias: …","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.","The <code>&lt;=</code> operator (less than or equal to)","A <code>let</code> guard: <code>let Some(x) = opt</code>.","A Rust lifetime: <code>&#39;a</code>.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A lifetime argument.","A lifetime definition: <code>&#39;a: &#39;b + &#39;c + &#39;d</code>.","A structured list within an attribute, like …","A Rust literal such as a string or integer or boolean.","A Rust literal, like the <code>&quot;new_name&quot;</code> in …","A literal in place of an expression: <code>1</code>, <code>&quot;foo&quot;</code>.","A literal pattern: <code>0</code>.","A boolean literal: <code>true</code> or <code>false</code>.","A byte literal: <code>b&#39;f&#39;</code>.","A byte string literal: <code>b&quot;foo&quot;</code>.","A character literal: <code>&#39;a&#39;</code>.","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.","An integer literal: <code>1</code> or <code>1u16</code>.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.","A local (let) binding.","Conditionless loop: <code>loop { ... }</code>.","The <code>&lt;</code> operator (less than)","A macro invocation: <code>println!(&quot;{}&quot;, mac)</code>.","A macro invocation expression: <code>format!(&quot;{}&quot;, q)</code>.","A macro invocation, which includes <code>macro_rules!</code> …","A macro invocation within an extern block.","A macro invocation within the definition of a trait.","A macro invocation within an impl block.","A macro in the type position.","A macro in pattern position.","A 2.0-style declarative macro introduced by the <code>macro</code> …","A grouping token that surrounds a macro body: <code>m!(...)</code> or …","A <code>match</code> expression: <code>match n { Some(n) =&gt; {}, None =&gt; {} }</code>.","","A struct or tuple struct field accessed in a struct …","Content of a compile-time structured attribute.","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …","A structured list within an attribute, like …","A name-value pair within an attribute, like …","A trait method within the definition of a trait.","A method within an impl block.","A method call expression: <code>x.foo::&lt;T&gt;(a, b)</code>.","The <code>::&lt;&gt;</code> explicit type parameters passed to a method call: …","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.","The <code>*</code> operator (multiplication)","The <code>*=</code> operator","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A name-value pair within an attribute, like …","Named fields of a struct or struct variant such as …","A named field like <code>self.x</code>.","The <code>!=</code> operator (not equal to)","The <code>-</code> operator for negation","Element of a compile-time attribute list.","The never type: <code>!</code>.","","","The <code>!</code> operator for logical inversion","The <code>||</code> operator (logical or)","A pattern that matches any one of a set of cases.","","A parenthesized expression: <code>(a + b)</code>.","","A parenthesized type equivalent to the inner type.","The <code>(A, B) -&gt; C</code> in <code>Fn(A, B) -&gt; C</code>.","Arguments of a function path segment: the <code>(A, B) -&gt; C</code> in …","A pattern in a local binding, function signature, match …","A box pattern: <code>box v</code>.","A pattern that binds a new variable: …","A literal pattern: <code>0</code>.","A macro in pattern position.","A pattern that matches any one of a set of cases.","A path pattern like <code>Color::Red</code>, optionally qualified with a","A range pattern: <code>1..=2</code>.","A reference pattern: <code>&amp;mut var</code>.","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","A type ascription pattern: <code>foo: f64</code>.","A pattern that matches any value: <code>_</code>.","A path at which a named item is exported (e.g. …","","A path like <code>std::mem::replace</code> possibly containing generic …","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A path pattern like <code>Color::Red</code>, optionally qualified with a","Angle bracketed or parenthesized arguments of a path …","A segment of a path together with any path arguments on …","An equality predicate in a <code>where</code> clause (unsupported).","A lifetime predicate in a <code>where</code> clause: <code>&#39;a: &#39;b + &#39;c</code>.","A type predicate in a <code>where</code> clause: …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A public visibility level: <code>pub</code>.","The explicit Self type in a qualified path: the <code>T</code> in …","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.","A range pattern: <code>1..=2</code>.","Limit types of a range, inclusive or exclusive.","A raw string like <code>r##&quot;data&quot;##</code>.","The <code>self</code> argument of an associated method, whether taken …","The <code>self</code> argument of an associated method, whether taken …","A referencing operation: <code>&amp;a</code> or <code>&amp;mut a</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A reference pattern: <code>&amp;mut var</code>.","The <code>%</code> operator (modulus)","The <code>%=</code> operator","An renamed identifier imported by a <code>use</code> item: …","An array literal constructed from one repeated element: …","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>","A visibility level restricted to some path: <code>pub(self)</code> or …","The result of a Syn parser.","A <code>return</code>, with an optional value to be returned.","Return type of a function signature.","Expression with trailing semicolon.","The <code>&lt;&lt;</code> operator (shift left)","The <code>&lt;&lt;=</code> operator","The <code>&gt;&gt;</code> operator (shift right)","The <code>&gt;&gt;=</code> operator","A function signature in a trait or implementation: …","A dynamically sized slice type: <code>[T]</code>.","A dynamically sized slice pattern: <code>[a, b, ref i @ .., y, z]</code>…","A static item: <code>static BIKE: Shed = Shed(42)</code>.","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.","A statement, usually ending in a semicolon.","A UTF-8 string literal: <code>&quot;foo&quot;</code>.","The style of a string literal, either plain quoted or a …","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.","A struct definition: <code>struct Foo&lt;A&gt; { x: A }</code>.","A struct input to a <code>proc_macro_derive</code> macro.","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.","The <code>-</code> operator (subtraction)","The <code>-=</code> operator","A type-macro that expands to the name of the Rust type …","","A trait definition: <code>pub trait Iterator { ... }</code>.","A trait alias: <code>pub trait SharableIterator = Iterator + Sync</code>…","A trait used as a bound on a type parameter.","A modifier on a trait bound, currently only used for the <code>?</code> …","An item declaration within the definition of a trait.","An associated constant within the definition of a trait.","A macro invocation within the definition of a trait.","A trait method within the definition of a trait.","An associated type within the definition of a trait.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A try-expression: <code>expr?</code>.","A try block: <code>try { ... }</code>.","A tuple expression: <code>(a, b, c, d)</code>.","A tuple type: <code>(A, B, C, String)</code>.","A tuple pattern: <code>(a, b)</code>.","A tuple struct or tuple variant pattern: …","Returned by <code>TypeGenerics::as_turbofish</code>.","The possible types that a Rust value could have.","A type ascription expression: <code>foo: f64</code>.","A type argument.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A type predicate in a <code>where</code> clause: …","A type alias: …","A foreign type in an <code>extern</code> block: <code>type void</code>.","An associated type within the definition of a trait.","An associated type within an impl block.","A particular type is returned.","A type ascription pattern: <code>foo: f64</code>.","A type argument.","A fixed size array type: <code>[T; n]</code>.","A bare function type: <code>fn(usize) -&gt; bool</code>.","Returned by <code>Generics::split_for_impl</code>.","A type contained within invisible delimiters.","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …","Indication that a type should be inferred by the compiler: …","A macro in the type position.","The never type: <code>!</code>.","A generic type parameter: <code>T: Into&lt;String&gt;</code>.","A trait or lifetime used as a bound on a type parameter.","A parenthesized type equivalent to the inner type.","A path like <code>std::slice::Iter</code>, optionally qualified with a …","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.","A reference type: <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>.","A dynamically sized slice type: <code>[T]</code>.","A trait object type <code>dyn Bound1 + Bound2 + Bound3</code> where …","A tuple type: <code>(A, B, C, String)</code>.","A function argument accepted by pattern and type.","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.","A unary operation: <code>!x</code>, <code>*x</code>.","A union definition: <code>union Foo&lt;A, B&gt; { x: A, y: B }</code>.","An untagged union input to a <code>proc_macro_derive</code> macro.","Unit struct or unit variant such as <code>None</code>.","Unnamed fields of a tuple struct or tuple variant such as …","An unnamed field like <code>self.0</code>.","An unsafe block: <code>unsafe { ... }</code>.","A use declaration: <code>use std::collections::HashMap</code>.","A glob import in a <code>use</code> item: <code>*</code>.","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.","An identifier imported by a <code>use</code> item: <code>HashMap</code>.","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.","An renamed identifier imported by a <code>use</code> item: …","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …","The variadic argument of a foreign function.","An enum variant.","Tokens in expression position not interpreted by Syn.","Tokens forming an item not interpreted by Syn.","Tokens in an <code>extern</code> block not interpreted by Syn.","Tokens within the definition of a trait not interpreted by …","Tokens within an impl block not interpreted by Syn.","A raw token literal not interpreted by Syn.","Tokens in type position not interpreted by Syn.","Tokens in pattern position not interpreted by Syn.","A crate-level visibility: <code>crate</code>.","A public visibility level: <code>pub</code>.","A visibility level restricted to some path: <code>pub(self)</code> or …","The visibility level of an item: inherited or <code>pub</code> or …","A <code>where</code> clause in a definition: …","A single predicate in a <code>where</code> clause: <code>T: Deserialize&lt;&#39;de&gt;</code>.","A while loop: <code>while expr { ... }</code>.","A pattern that matches any value: <code>_</code>.","A yield expression: <code>yield expr</code>.","","","","","","","","","","","","","","","","","Turn a type’s generics like <code>&lt;X, Y&gt;</code> into a turbofish like …","","","","Attributes tagged on the variant.","Attributes tagged on the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attributes tagged on the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attributes tagged on the whole struct or enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses the literal into a selected number typehe type being bounded","","","Trait and lifetime bounds (<code>Clone+Send+&#39;static</code>)","","","","","","","","","","","","","","","","","","","","Parse a set of curly braces and expose their content to …","","","","","","","","Parse a set of square brackets and expose their content to …","","A stably addressed token buffer supporting efficient …he colon in <code>Struct { x: x }</code>. If written in shorthand like …","","","","","","","","","","","","","","","","","","","","Returns an Iterator&lt;Item = &amp;ConstParam&gt; over the constant …","Returns an Iterator&lt;Item = &amp;mut ConstParam&gt; over the …","","","","","","","","","","","Define a type that supports parsing and printing a given …","Define a type that supports parsing and printing a …","Data within the struct or enum.","","","","","","","","","","","","","","Explicit discriminant: <code>Variant = 1</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value of the field.","","","","","Extension traits to provide parsing methods on foreign …","","","","Content stored in the variant.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Generics required to complete the definition.","If this path consists of a single ident, returns the ident.","","","","","","","","","","","","","","","Name of the variant.","Name of the field, if any.","","","","","","The <code>example</code> in <code>macro_rules! example { ... }</code>.","","","","","","","","","","","","","","","","","","","Name of the struct or enum.","","","","","","","","","","","","","","","","<code>(A, B)</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if there are zero fields.","","Determines whether this is a path of length 1 equal to the …","","","","","","","Get an iterator over the borrowed <code>Field</code> items in this …","Get an iterator over the mutably borrowed <code>Field</code> items in …","","","","","","","","","","","","","Returns the number of fields.","","","","","","","","","","Returns an Iterator&lt;Item = &amp;LifetimeDef&gt; over the lifetime …","","The <code>for&lt;&#39;a&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","Any lifetimes from a <code>for</code> binding","","Returns an Iterator&lt;Item = &amp;mut LifetimeDef&gt; over the …","","","","","","","","","","","","","","","","","","","","Initializes an empty <code>where</code>-clause if there is not one …","","","Name or index of the field.","","","","","","","","","","","","","","","","","","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Panics","","Interpret a Syn literal from a proc-macro2 literal.","","","","","","","","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","","","","","","","<code>C</code>","","","","","","","","","","","","","","","","Parse a set of parentheses and expose their content to …","Parsing interface for parsing a token stream into a syntax …","Parse tokens of source code into the chosen syntax tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a syntax tree node from the content of this string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse a proc-macro2 token stream into the chosen syntax …","","Parse the arguments to the attribute as a syntax tree.","Parse the arguments to the attribute using the given …","Parse the tokens within the macro invocation’s …","Parse the tokens within the macro invocation’s …","Parse the content of a file of Rust code.","Parses zero or more inner attributes from the stream.","Parse the input TokenStream of a macro, triggering a …","Parses the content of the attribute, consisting of the …","Parse a <code>Path</code> containing no path arguments on any of its …","Parses a named (braced struct) field.","Parses zero or more outer attributes from the stream.","Quasi-quotation macro that accepts input like the <code>quote!</code> …","This macro is <code>parse_quote!</code> + <code>quote_spanned!</code>.","Parse a string of Rust code into the chosen syntax tree …","Parses an unnamed (tuple struct) field.","Invoke parser on the content of this string literal.","Parse the body of a block as zero or more statements, …","An alternative to the primary <code>Expr::parse</code> parser (from the …","","","","","","","","","","","","Returns the identifier that begins this structured meta …","","","","","","","The <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>","","","","","","","","","","","A punctuated sequence of syntax tree nodes separated by …","","","","","","A method’s <code>self</code> receiver, such as <code>&amp;self</code> or …","","","","","","","","","","","","","","The Self type of the impl.","","","","","","","","","","","","","","","","","","","","","","","","","Configures the span of this <code>Ident</code>, possibly changing its …","","","","","","","","","","","","","","","Returns the span of this <code>Ident</codetrait that can provide the <code>Span</code> of the complete contents …","Split a type’s generics into the pieces required for impl…","","","","","Statements in a blockokens representing Rust punctuation, keywords, and …","","","","","","","","","","Trait this impl implementsype of the field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an Iterator&lt;Item = &amp;TypeParam&gt; over the type …","Returns an Iterator&lt;Item = &amp;mut TypeParam&gt; over the type …","","","","","","","","","","","","","","","","","","","","","","","","","","","Visibility of the field.","","","","","","","","","","","","","","","","","","","","Visibility of the struct or enum.","Syntax tree traversal to walk a shared borrow of a syntax …","","","","In some positions, types may not contain the <code>+</code> character, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A cheaply copyable cursor into a <code>TokenBuffer</code>.","A buffer that can be efficiently traversed multiple times, …","Creates a cursor referencing the first token in the buffer …","","","","","","","Creates a cursor referencing a static empty TokenStream.","Checks whether the cursor is currently pointing at the end …","","Returns the argument unchanged.","Returns the argument unchanged.","If the cursor is pointing at a <code>Group</code> with the given …","If the cursor is pointing at a <code>Ident</code>, returns it along …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the cursor is pointing at a <code>Lifetime</code>, returns it along …","If the cursor is pointing at a <code>Literal</code>, return it along …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","Creates a <code>TokenBuffer</code> containing all the tokens from the …","","If the cursor is pointing at a <code>Punct</code>, returns it along …","Returns the <code>Span</code> of the current token, or <code>Span::call_site()</code>…","","Copies all remaining tokens visible from this cursor into a","If the cursor is pointing at a <code>TokenTree</code>, returns it along …","","","","","","","Additional methods for <code>Ident</code> not provided by proc-macro2 …","Parses any identifier including keywords.","Peeks any identifier including keywords. Usage: …","Strips the raw marker <code>r#</code>, if any, from the beginning of an …","Error returned when a Syn parser cannot parse the input …","Support for checking the next token in a stream to decide …","An empty syntax tree node that consumes no tokens when …","","Parsing interface implemented by all types that can be …","Cursor position within a buffered token stream.","Input to a Syn parser function.","Parser that can parse Rust tokens into a particular syntax …","Types that can be parsed by looking at just one token.","The result of a Syn parser.","Cursor state associated with speculative parsing.","","","","","","","","","","","","Calls the given parser function to parse a syntax tree …","","","","","Add another error message to self such that when …","Provides low-level access to the token representation …","","Extensions to the parsing API with niche applicability.","","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","Triggers an error at the current position of the parse …","","","","","","Forks a parse stream so that parsing tokens out of either …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Render the error as an invocation of <code>compile_error!</code>.","","","Returns whether there are tokens remaining in this stream.","Constructs a helper for peeking at the next token in this …","Usually the <code>ParseStream::error</code> method will be used …","Creates an error with the specified message spanning the …","","Parses a syntax tree node of type <code>T</code>, advancing the …","Parse tokens of source code into the chosen syntax tree …","","Parse a proc-macro2 token stream into the chosen syntax …","Parse a string of Rust code into the chosen syntax tree …","Parses zero or more occurrences of <code>T</code> separated by …","Looks at the next token in the parse stream to determine …","Looks at the next token in the parse stream to determine …","Looks at the second-next token in the parse stream.","Looks at the third-next token in the parse stream.","","Returns the <code>Span</code> of the next token in the parse stream, or …","The source location of the error.","Speculatively parses tokens from this parse stream, …","Render the error as an invocation of <code>compile_error!</code>.","","","","","","","","","","","","","","","","","","","","Extensions to the <code>ParseStream</code> API to support speculative …","Advance this parse stream to the position of a forked …","","An iterator over owned values of type <code>T</code>.","An iterator over owned pairs of type <code>Pair&lt;T, P&gt;</code>.","An iterator over borrowed values of type <code>&amp;T</code>.","An iterator over mutably borrowed values of type <code>&amp;mut T</code>.","A single syntax tree node of type <code>T</code> followed by its …","An iterator over borrowed pairs of type <code>Pair&lt;&amp;T, &amp;P&gt;</code>.","An iterator over mutably borrowed pairs of type …","A punctuated sequence of syntax tree nodes of type <code>T</code> …","","","","","","","","","","","","","","","","","","Clears the sequence of all values and punctuation, making …","","","","","","","","","","","","","","Returns true if either this <code>Punctuated</code> is empty, or it has …","","","Borrows the first element in this sequence.","Mutably borrows the first element in this sequence.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Inserts an element at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Produces this punctuated pair as a tuple of syntax tree …","Extracts the syntax tree node from this punctuated pair, …","Determines whether this punctuated sequence is empty, …","Returns an iterator over borrowed syntax tree nodes of …","Returns an iterator over mutably borrowed syntax tree …","Borrows the last element in this sequence.","Mutably borrows the last element in this sequence.","Returns the number of syntax tree nodes in this punctuated …","","","","","","","Creates an empty punctuated sequence.","Creates a punctuated pair out of a syntax tree node and an …","","","","","","","","","","","","","Returns an iterator over the contents of this sequence as …","Returns an iterator over the contents of this sequence as …","Parses one or more occurrences of <code>T</code> separated by …","Parses one or more occurrences of <code>T</code> using the given parse …","Parses zero or more occurrences of <code>T</code> separated by …","Parses zero or more occurrences of <code>T</code> using the given parse …","Removes the last punctuated pair from this sequence, or …","Borrows the punctuation from this punctuated pair, unless …","Mutably borrows the punctuation from this punctuated pair, …","Appends a syntax tree node onto the end of this punctuated …","Appends a trailing punctuation onto the end of this …","Appends a syntax tree node onto the end of this punctuated …","","","","","","","","","","","","","","","","","Determines whether this punctuated sequence ends with a …","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the syntax tree node from this punctuated pair.","Mutably borrows the syntax tree node from this punctuated …","","","","A trait that can provide the <code>Span</code> of the complete contents …","Returns a <code>Span</code> covering the complete contents of this …","<code>abstract</code>","<code>+</code>","<code>+=</code>","<code>&amp;</code>","<code>&amp;&amp;</code>","<code>&amp;=</code>","<code>as</code>","<code>async</code>","<code>@</code>","<code>auto</code>","<code>await</code>","<code>!</code>","<code>become</code>","<code>box</code>","<code>{...}</code>","<code>[...]</code>","<code>break</code>","<code>^</code>","<code>^=</code>","<code>:</code>","<code>::</code>","<code>,</code>","<code>const</code>","<code>continue</code>","<code>crate</code>","<code>default</code>","<code>/</code>","<code>/=</code>","<code>do</code>","<code>$</code>","<code>.</code>","<code>..</code>","<code>...</code>","<code>..=</code>","<code>dyn</code>","<code>else</code>","<code>enum</code>","<code>=</code>","<code>==</code>","<code>extern</code>","<code>=&gt;</code>","<code>final</code>","<code>fn</code>","<code>for</code>","<code>&gt;=</code>","None-delimited group","<code>&gt;</code>","<code>if</code>","<code>impl</code>","<code>in</code>","<code>&lt;-</code>","<code>&lt;=</code>","<code>let</code>","<code>loop</code>","<code>&lt;</code>","<code>macro</code>","<code>match</code>","<code>mod</code>","<code>move</code>","<code>*=</code>","<code>mut</code>","<code>!=</code>","<code>|</code>","<code>|=</code>","<code>||</code>","<code>override</code>","<code>(...)</code>","<code>#</code>","<code>priv</code>","<code>pub</code>","<code>?</code>","<code>-&gt;</code>","<code>ref</code>","<code>%</code>","<code>%=</code>","<code>return</code>","<code>Self</code>","<code>self</code>","<code>;</code>","<code>&lt;&lt;</code>","<code>&lt;&lt;=</code>","<code>&gt;&gt;</code>","<code>&gt;&gt;=</code>","<code>*</code>","<code>static</code>","<code>struct</code>","<code>-</code>","<code>-=</code>","<code>super</code>","<code>~</code>","Marker trait for types that represent single tokens.","<code>trait</code>","<code>try</code>","<code>type</code>","<code>typeof</code>","<code>_</code>","<code>union</code>","<code>unsafe</code>","<code>unsized</code>","<code>use</code>","<code>virtual</code>","<code>where</code>","<code>while</code>","<code>yield</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeyntax tree traversal to walk a shared borrow of a syntax …i":[0,142,142,142,185,0,0,25,147,25,25,25,0,0,0,25,147,0,0,25,0,186,142,142,142,142,142,142,0,25,129,0,25,166,136,136,25,129,129,25,25,129,72,25,68,74,87,115,120,186,0,0,186,25,337,21,0,0,0,0,165,143,0,142,142,87,138,83,142,0,0,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,0,25,0,0,0,0,0,0,129,87,110,0,25,0,0,0,0,0,87,142,0,0,0,0,104,25,104,147,142,72,0,166,25,87,0,0,0,0,0,0,147,0,25,147,21,11,129,0,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,25,0,74,79,83,186,0,12,0,15,25,166,0,0,0,0,0,0,0,0,145,25,142,0,25,87,110,115,120,147,166,87,0,25,81,0,0,15,0,0,115,120,25,0,87,142,142,104,12,17,65,142,143,0,147,81,185,143,142,166,11,25,136,147,185,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,25,104,147,166,0,0,0,0,0,147,21,0,25,166,0,337,0,126,25,147,166,142,142,104,25,166,21,0,25,0,145,142,142,142,142,0,147,166,87,110,0,129,0,25,87,138,166,142,142,0,79,87,87,0,0,0,0,0,0,0,147,25,25,25,147,166,166,0,0,25,68,74,83,87,110,115,120,165,166,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,0,25,87,138,17,17,65,25,87,0,0,0,0,0,0,0,0,25,87,110,115,120,129,147,166,0,0,0,0,0,0,25,166,25,92,125,149,53,158,174,9,35,49,67,187,184,48,36,107,191,1,29,37,125,16,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,71,75,76,77,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,112,113,114,116,117,118,119,121,122,123,124,127,128,137,146,163,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,99,30,135,154,30,39,3,5,3,5,29,32,58,62,91,122,37,40,46,63,71,7,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,337,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,7,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,337,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,84,75,76,84,85,100,118,151,160,189,33,167,18,48,56,89,92,93,99,109,140,144,177,0,10,26,43,54,148,159,176,0,34,0,168,29,37,171,7,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,7,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,7,9,67,105,187,20,60,69,70,75,76,77,84,85,88,97,99,112,116,118,121,180,182,189,71,42,63,73,73,77,88,116,121,157,125,96,38,23,90,0,0,137,73,78,185,75,77,116,117,118,93,121,122,123,135,16,56,175,177,30,39,49,164,160,148,150,155,157,158,159,26,59,161,176,178,42,89,140,7,7,9,65,66,14,27,44,75,77,86,88,97,100,101,121,123,188,33,34,36,40,41,43,44,48,50,53,54,55,57,60,61,64,69,88,97,121,169,0,90,162,71,16,56,98,102,139,141,177,7,7,7,9,65,66,3,5,125,149,40,78,7,7,7,7,7,7,7,8,1,2,9,10,11,12,12,12,12,13,14,15,15,15,16,17,17,17,18,19,20,21,21,21,21,22,23,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,65,65,65,66,66,67,68,69,70,71,72,73,74,74,74,74,75,75,76,77,78,79,79,79,80,81,82,83,83,83,83,84,85,86,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,104,104,104,104,104,105,106,107,108,109,110,110,110,110,110,111,112,113,114,115,115,115,115,115,116,117,118,119,120,120,120,120,120,121,122,123,124,125,126,126,126,127,128,129,129,129,129,129,129,129,129,130,131,132,133,3,3,5,5,134,337,135,136,137,137,137,137,138,138,138,138,139,140,141,142,143,144,145,146,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,183,184,184,185,186,187,188,189,190,191,52,35,89,93,98,99,100,101,102,118,123,125,137,183,41,150,67,73,78,187,191,71,7,9,65,66,173,9,16,20,75,77,88,89,90,94,95,96,97,98,99,100,101,102,105,106,107,112,113,116,118,121,123,125,137,168,184,188,189,42,93,151,24,40,43,66,146,37,125,149,190,7,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,337,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,17,17,17,17,185,183,185,92,93,99,109,128,17,17,32,34,38,40,46,63,103,183,171,27,28,31,17,54,148,44,146,86,127,76,85,158,73,78,80,84,149,73,52,173,14,45,173,46,67,73,78,187,191,47,94,114,119,124,153,170,95,73,48,39,69,182,49,96,80,37,53,97,112,127,157,158,168,174,70,162,163,18,13,7,9,76,129,130,131,132,133,3,5,134,7,28,31,61,37,37,37,125,149,190,73,13,19,24,35,49,50,59,80,125,149,155,161,178,190,0,0,0,7,9,12,13,14,15,16,18,19,21,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,130,131,132,133,3,5,134,135,137,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,183,184,186,187,188,189,190,0,7,10,10,135,135,0,10,0,10,183,20,10,0,0,0,20,130,144,25,7,9,40,44,71,146,167,174,179,180,182,12,10,13,14,24,51,56,80,135,156,172,177,179,191,10,82,22,24,0,51,156,172,57,53,125,49,127,90,107,56,55,86,27,28,31,95,183,127,93,96,54,88,90,94,97,98,100,101,103,111,112,113,114,116,117,118,119,121,123,124,139,146,148,7,9,129,130,131,132,133,3,5,134,128,91,111,117,122,7,7,7,8,1,2,9,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,65,66,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,129,130,130,131,131,132,132,133,133,3,3,5,5,134,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,66,134,0,73,108,157,97,112,144,98,139,10,168,129,130,131,132,133,3,5,99,42,52,7,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,7,9,3,5,7,8,1,2,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,0,130,131,132,133,3,5,134,10,135,93,99,100,103,105,7,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,337,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,7,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,337,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,58,49,20,36,60,77,88,97,101,112,116,121,123,163,180,188,191,7,8,1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,5,134,337,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,73,73,101,113,118,123,152,181,102,141,19,7,62,93,99,125,149,103,130,131,132,133,134,134,125,149,89,140,20,88,89,90,91,95,96,97,98,99,100,101,102,103,111,112,113,121,122,123,137,0,73,82,63,147,151,160,165,64,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,489,490,491,492,493,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,0,0,220,220,221,220,221,221,221,221,221,221,220,221,221,221,220,221,221,221,220,220,221,221,221,221,221,221,220,221,220,221,220,221,0,532,532,532,0,0,0,216,0,0,0,0,0,0,0,223,226,223,224,231,225,226,223,224,231,225,223,224,225,224,225,225,223,224,0,223,226,223,224,225,223,223,225,225,223,226,223,224,231,225,225,226,223,224,231,225,225,225,225,223,223,225,225,213,223,216,231,216,216,223,226,223,223,223,225,223,225,223,225,224,225,223,225,226,223,224,231,225,226,223,224,231,225,226,223,224,231,225,0,533,238,0,0,0,0,0,0,0,0,238,232,235,239,236,237,207,208,238,232,235,239,236,237,207,208,238,232,232,235,236,237,207,238,232,235,236,237,207,238,232,232,232,232,232,232,232,235,239,236,237,207,208,238,232,232,232,232,232,232,235,239,236,237,207,208,238,232,232,232,235,239,236,237,207,208,232,238,238,232,232,232,232,232,232,235,239,236,237,207,208,232,238,235,239,236,237,207,208,235,239,236,237,207,208,232,232,232,232,232,232,232,238,238,232,232,232,235,239,236,237,207,208,232,238,232,235,236,237,207,238,232,238,232,232,235,239,236,237,207,208,238,232,235,239,236,237,207,208,238,232,235,239,236,237,207,208,238,238,238,534,535,534,0,536,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,198,287,289,292,293,294,296,298,299,301,302,306,309,311,314,317,318,321,324,329,330,332,198,287,289,292,293,294,296,298,299,301,302,306,309,311,314,317,318,321,324,329,330,332,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,333,334,335,336,198,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,198,240,241,242,243,244,245,246,247,248,249,203,250,251,252,253,254,202,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,201,200,273,274,199,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,0,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537,0,537,537],"fp":[[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitInt"],[15,"str"],[3,"LitFloat"],[6,"Result"],[3,"Ident"],[3,"ImplGenerics"],[3,"Lifetime"],[3,"Attribute"],[4,"AttrStyle"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Variant"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Field"],[4,"Visibility"],[3,"VisPublic"],[3,"VisCrate"],[3,"VisRestricted"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[4,"Member"],[3,"Index"],[3,"MethodTurbofish"],[4,"GenericMethodArgument"],[3,"FieldValue"],[3,"Label"],[3,"Arm"],[4,"RangeLimits"],[3,"Generics"],[4,"GenericParam"],[3,"TypeParam"],[3,"LifetimeDef"],[3,"ConstParam"],[3,"BoundLifetimes"],[4,"TypeParamBound"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"WhereClause"],[4,"WherePredicate"],[3,"PredicateType"],[3,"PredicateLifetime"],[3,"PredicateEq"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[4,"UseTree"],[3,"UsePath"],[3,"UseName"],[3,"UseRename"],[3,"UseGlob"],[3,"UseGroup"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemMacro"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemMacro"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemMacro"],[3,"Signature"],[4,"FnArg"],[3,"Receiver"],[3,"File"],[4,"Lit"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitBool"],[3,"Macro"],[4,"MacroDelimiter"],[3,"DeriveInput"],[4,"Data"],[3,"DataStruct"],[3,"DataEnum"],[3,"DataUnion"],[4,"BinOp"],[4,"UnOp"],[3,"Block"],[4,"Stmt"],[3,"Local"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Abi"],[3,"BareFnArg"],[3,"Variadic"],[4,"ReturnType"],[4,"Pat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"FieldPat"],[3,"Path"],[3,"PathSegment"],[4,"PathArguments"],[4,"GenericArgument"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"QSelf"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[3,"Underscore"],[3,"Super"],[3,"SelfValue"],[3,"SelfType"],[3,"Extern"],[3,"Crate"],[15,"usize"],[3,"Literal"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"Span"],[15,"u8"],[15,"char"],[3,"TokenStream"],[8,"Parse"],[6,"ParseStream"],[3,"TokenStream"],[8,"Parser"],[3,"Vec"],[3,"String"],[3,"TypeId"],[3,"TokenBuffer"],[3,"Cursor"],[4,"Delimiter"],[3,"ParseBuffer"],[3,"StepCursor"],[3,"Error"],[3,"Lookahead1"],[8,"Display"],[8,"IntoIterator"],[3,"LexError"],[8,"ToTokens"],[3,"Nothing"],[3,"Punctuated"],[8,"Peek"],[3,"Demand"],[3,"Pairs"],[3,"IntoPairs"],[3,"IntoIter"],[4,"Pair"],[3,"PairsMut"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Static"],[3,"Struct"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[4,"StrStyle"],[13,"Inner"],[13,"Add"],[13,"Sub"],[13,"Mul"],[13,"Div"],[13,"Rem"],[13,"And"],[13,"Or"],[13,"BitXor"],[13,"BitAnd"],[13,"BitOr"],[13,"Shl"],[13,"Shr"],[13,"Eq"],[13,"Lt"],[13,"Le"],[13,"Ne"],[13,"Ge"],[13,"Gt"],[13,"AddEq"],[13,"SubEq"],[13,"MulEq"],[13,"DivEq"],[13,"RemEq"],[13,"BitXorEq"],[13,"BitAndEq"],[13,"BitOrEq"],[13,"ShlEq"],[13,"ShrEq"],[13,"Struct"],[13,"Enum"],[13,"Union"],[13,"Array"],[13,"Assign"],[13,"AssignOp"],[13,"Async"],[13,"Await"],[13,"Binary"],[13,"Block"],[13,"Box"],[13,"Break"],[13,"Call"],[13,"Cast"],[13,"Closure"],[13,"Continue"],[13,"Field"],[13,"ForLoop"],[13,"Group"],[13,"If"],[13,"Index"],[13,"Let"],[13,"Lit"],[13,"Loop"],[13,"Macro"],[13,"Match"],[13,"MethodCall"],[13,"Paren"],[13,"Path"],[13,"Range"],[13,"Reference"],[13,"Repeat"],[13,"Return"],[13,"Struct"],[13,"Try"],[13,"TryBlock"],[13,"Tuple"],[13,"Type"],[13,"Unary"],[13,"Unsafe"],[13,"Verbatim"],[13,"While"],[13,"Yield"],[13,"Named"],[13,"Unnamed"],[13,"Receiver"],[13,"Typed"],[13,"Fn"],[13,"Static"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Lifetime"],[13,"Type"],[13,"Const"],[13,"Binding"],[13,"Constraint"],[13,"Type"],[13,"Const"],[13,"Type"],[13,"Lifetime"],[13,"Const"],[13,"Const"],[13,"Method"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Const"],[13,"Enum"],[13,"ExternCrate"],[13,"Fn"],[13,"ForeignMod"],[13,"Impl"],[13,"Macro"],[13,"Macro2"],[13,"Mod"],[13,"Static"],[13,"Struct"],[13,"Trait"],[13,"TraitAlias"],[13,"Type"],[13,"Union"],[13,"Use"],[13,"Verbatim"],[13,"Str"],[13,"ByteStr"],[13,"Byte"],[13,"Char"],[13,"Int"],[13,"Float"],[13,"Bool"],[13,"Verbatim"],[13,"Paren"],[13,"Brace"],[13,"Bracket"],[13,"Named"],[13,"Unnamed"],[13,"Path"],[13,"List"],[13,"NameValue"],[13,"Meta"],[13,"Lit"],[13,"Box"],[13,"Ident"],[13,"Lit"],[13,"Macro"],[13,"Or"],[13,"Path"],[13,"Range"],[13,"Reference"],[13,"Rest"],[13,"Slice"],[13,"Struct"],[13,"Tuple"],[13,"TupleStruct"],[13,"Type"],[13,"Verbatim"],[13,"Wild"],[13,"AngleBracketed"],[13,"Parenthesized"],[13,"HalfOpen"],[13,"Closed"],[13,"Type"],[13,"Local"],[13,"Item"],[13,"Expr"],[13,"Semi"],[13,"Raw"],[13,"Maybe"],[13,"Const"],[13,"Method"],[13,"Type"],[13,"Macro"],[13,"Verbatim"],[13,"Array"],[13,"BareFn"],[13,"Group"],[13,"ImplTrait"],[13,"Infer"],[13,"Macro"],[13,"Never"],[13,"Paren"],[13,"Path"],[13,"Ptr"],[13,"Reference"],[13,"Slice"],[13,"TraitObject"],[13,"Tuple"],[13,"Verbatim"],[13,"Trait"],[13,"Lifetime"],[13,"Deref"],[13,"Not"],[13,"Neg"],[13,"Path"],[13,"Name"],[13,"Rename"],[13,"Glob"],[13,"Group"],[13,"Public"],[13,"Crate"],[13,"Restricted"],[13,"Type"],[13,"Lifetime"],[13,"Eq"],[8,"IdentExt"],[8,"Speculative"],[13,"Punctuated"],[13,"End"],[8,"Spanned"],[8,"Visit"]]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":[5,5],"n":["is_xid_continue","is_xid_start"],"q":["unicode_ident",""],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"p":[[15,"char"],[15,"bool"]]},\
"wasm_bindgen":{"doc":"Runtime support for the <code>wasm-bindgen</code> tool","t":[12,3,18,8,3,3,3,18,18,18,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,10,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,5,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,16,16,16,16,16,8,8,13,8,8,8,8,3,19,8,13,8,4,3,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,10,12,10,12,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,12,2,2,2,2,23],"n":["0","Clamped","FALSE","JsCast","JsError","JsStatic","JsValue","NULL","TRUE","UNDEFINED","UnwrapThrowExt","add","add","add","add","as_bool","as_f64","as_ref","as_string","bigint_from_str","bit_not","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitxor","bitxor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_div","clone","clone","clone","clone_into","clone_into","clone_into","closure","convert","default","deref","deref","deref_mut","div","div","div","div","drop","dyn_into","dyn_into","dyn_ref","dyn_ref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","expect_throw","externref_heap_live_count","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_abi","from_abi","from_bool","from_f64","from_str","function_table","ge","gt","has_type","has_type","instanceof","instanceof","intern","into","into","into","into","into_abi","into_abi","into_abi","into_abi","is_bigint","is_falsy","is_function","is_instance_of","is_instance_of","is_null","is_object","is_string","is_symbol","is_truthy","is_type_of","is_type_of","is_undefined","js_in","js_typeof","le","loose_eq","lt","memory","mul","mul","mul","mul","neg","neg","new","not","not","null","pow","prelude","ref_from_abi","rem","rem","rem","rem","shl","shl","shl","shl","shr","shr","shr","shr","sub","sub","sub","sub","symbol","throw_str","throw_val","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_from_js","unchecked_from_js","unchecked_from_js_ref","unchecked_from_js_ref","unchecked_into","unchecked_into","unchecked_into_f64","unchecked_ref","unchecked_ref","undefined","unintern","unsigned_shr","unwrap_throw","Closure","as_ref","borrow","borrow_mut","drop","fmt","forget","from","into","into_abi","into_js_value","new","none","once","once_into_js","try_from","try_into","type_id","wrap","Abi","Abi","Abi","Abi","Abi","Anchor","Anchor","FromWasmAbi","IntoWasmAbi","None","OptionFromWasmAbi","OptionIntoWasmAbi","RefFromWasmAbi","RefMutFromWasmAbi","ResultAbi","ResultAbiUnion","ReturnWasmAbi","Some","WasmAbi","WasmOption","WasmSlice","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from_abi","from_option","into","into","into","into","into_abi","into_option","is_none","len","none","ptr","ref_from_abi","ref_mut_from_abi","return_abi","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","Closure","JsError","JsValue","UnwrapThrowExt","wasm_bindgen"],"q":["wasm_bindgen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasm_bindgen::closure","","","","","","","","","","","","","","","","","","","wasm_bindgen::convert","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wasm_bindgen::convert::WasmOption","wasm_bindgen::prelude","","","",""],"d":["","A wrapper type around slices and vectors for binding the …","The <code>false</code> JS value constant.","A trait for checked and unchecked casting between JS types.","Convenience type for use on exported …","Wrapper type for imported statics.","Representation of an object owned by JS.","The <code>null</code> JS value constant.","The <code>true</code> JS value constant.","The <code>undefined</code> JS value constant.","An extension trait for <code>Option&lt;T&gt;</code> and <code>Result&lt;T, E&gt;</code> for …","","","","Applies the binary <code>+</code> JS operator on two <code>JsValue</code>s.","Returns the <code>bool</code> value of this JS value if it’s an …","Returns the <code>f64</code> value of this JS value if it’s an …","","If this JS value is a string value, this function copies …","Creates a new JS value which is a bigint from a string …","Applies the unary <code>~</code> JS operator on a <code>JsValue</code>.","","","Applies the binary <code>&amp;</code> JS operator on two <code>JsValue</code>s.","","","Applies the binary <code>|</code> JS operator on two <code>JsValue</code>s.","","","Applies the binary <code>^</code> JS operator on two <code>JsValue</code>s.","","","","","","","","","","","","Applies the binary <code>/</code> JS operator on two <code>JsValue</code>s, catching …","","","","","","","Support for long-lived closures in <code>wasm-bindgen</code>","This is mostly an internal module, no stability guarantees …","","","","","Applies the binary <code>/</code> JS operator on two <code>JsValue</code>s.","","","","","Performs a dynamic cast (checked at runtime) of this value …","Performs a dynamic cast (checked at runtime) of this value …","Performs a dynamic cast (checked at runtime) of this value …","Performs a dynamic cast (checked at runtime) of this value …","","","","","","","","","","","","","","","Compares two <code>JsValue</code>s for equality, using the <code>===</code> operator …","","","","","","","Unwrap this container’s <code>T</code> value, or throw an error to JS …","Get the count of live <code>externref</code>s / <code>JsValue</code>s in <code>wasm-bindgen</code>…","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Creates a new JS value which is a boolean.","Creates a new JS value which is a number.","Creates a new JS value which is a string.","Returns a handle to this wasm instance’s …","Applies the binary <code>&gt;=</code> JS operator on the two <code>JsValue</code>s.","Applies the binary <code>&gt;</code> JS operator on the two <code>JsValue</code>s.","Test whether this JS value has a type <code>T</code>.","Test whether this JS value has a type <code>T</code>.","Performs a dynamic <code>instanceof</code> check to see whether the …","","Interns Rust strings so that it’s much faster to send …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Tests whether the type of this JS value is <code>bigint</code>.","Tests whether the value is “falsy”.","Tests whether the type of this JS value is <code>function</code>.","Test whether this JS value is an instance of the type <code>T</code>.","Test whether this JS value is an instance of the type <code>T</code>.","Tests whether this JS value is <code>null</code>","Tests whether <code>typeof self == &quot;object&quot; &amp;&amp; self !== null</code>.","Tests whether this JS value is a JS string.","Tests whether the type of this JS value is <code>symbol</code>","Tests whether the value is “truthy”.","Performs a dynamic check to see whether the <code>JsValue</code> …","Performs a dynamic check to see whether the <code>JsValue</code> …","Tests whether this JS value is <code>undefined</code>","Applies the binary <code>in</code> JS operator on the two <code>JsValue</code>s.","Applies the unary <code>typeof</code> JS operator on a <code>JsValue</code>.","Applies the binary <code>&lt;=</code> JS operator on the two <code>JsValue</code>s.","Compare two <code>JsValue</code>s for equality, using the <code>==</code> operator …","Applies the binary <code>&lt;</code> JS operator on the two <code>JsValue</code>s.","Returns a handle to this wasm instance’s …","","","Applies the binary <code>*</code> JS operator on two <code>JsValue</code>s.","","Applies the unary <code>-</code> JS operator on a <code>JsValue</code>.","","Construct a JavaScript <code>Error</code> object with a string message","","Applies the <code>!</code> JS operator on a <code>JsValue</code>.","Creates a new JS value representing <code>null</code>.","Applies the binary <code>**</code> JS operator on the two <code>JsValue</code>s.","A module which is typically glob imported from:","","","Applies the binary <code>%</code> JS operator on two <code>JsValue</code>s.","","","Applies the binary <code>&lt;&lt;</code> JS operator on two <code>JsValue</code>s.","","","","Applies the binary <code>&gt;&gt;</code> JS operator on two <code>JsValue</code>s.","","","","","Applies the binary <code>-</code> JS operator on two <code>JsValue</code>s.","","","Creates a new JS symbol with the optional description …","Throws a JS exception.","Rethrow a JS exception","","","","","","","","","","","","","","","","Performs a zero-cost unchecked conversion from a <code>JsValue</code> …","","Performs a zero-cost unchecked conversion from a <code>&amp;JsValue</code> …","","Performs a zero-cost unchecked cast into the specified …","Performs a zero-cost unchecked cast into the specified …","Applies the unary <code>+</code> JS operator on a <code>JsValue</code>. Can throw.","Performs a zero-cost unchecked cast into a reference to …","Performs a zero-cost unchecked cast into a reference to …","Creates a new JS value representing <code>undefined</code>.","Removes a Rust string from the intern cache.","Applies the binary <code>&gt;&gt;&gt;</code> JS operator on the two <code>JsValue</code>s.","Unwrap this <code>Option</code> or <code>Result</code>, but instead of panicking on …","A handle to both a closure in Rust as well as JS closure …","","","","","","Same as <code>into_js_value</code>, but doesn’t return a value.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Release memory management of this closure from Rust to the …","Creates a new instance of <code>Closure</code> from the provided Rust …","","Create a <code>Closure</code> from a function that can only be called …","Convert a <code>FnOnce(A...) -&gt; R</code> into a JavaScript <code>Function</code> …","","","","A more direct version of <code>Closure::new</code> which creates a …","The wasm ABI type that this converts into when crossing …","The wasm ABI type that this converts from when coming back …","The wasm ABI type references to <code>Self</code> are recovered from.","Same as <code>RefFromWasmAbi::Abi</code>","Same as <code>IntoWasmAbi::Abi</code>","The type that holds the reference to <code>Self</code> for the duration …","Same as <code>RefFromWasmAbi::Anchor</code>","A trait for anything that can be recovered by-value from …","A trait for anything that can be converted into a type …","","Indicates that this type can be received from JS as …","Indicates that this type can be passed to JS as …","A trait for anything that can be recovered as some sort of …","Dual of the <code>RefFromWasmAbi</code> trait, except for mutable …","This is an encoding of a Result. It can only store things …","","A trait representing how to interepret the return value of …","","An unsafe trait which represents types that are ABI-safe …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Recover a <code>Self</code> from <code>Self::Abi</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>self</code> into <code>Self::Abi</code> so that it can be sent across …","","Tests whether the argument is a “none” instance. If so …","","Returns an ABI instance indicating “none”, which JS …","","Recover a <code>Self::Anchor</code> from <code>Self::Abi</code>.","Same as <code>RefFromWasmAbi::ref_from_abi</code>","Same as <code>IntoWasmAbi::into_abi</code>, except that it may throw …","","","","","","","","","","","","","","","","","",""],"i":[8,0,1,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,11,8,9,1,11,8,9,1,1,8,9,1,8,9,0,0,1,11,8,8,1,1,1,1,1,38,38,38,38,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,39,0,1,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,11,8,9,9,9,1,8,1,1,1,0,1,1,38,38,38,1,0,1,11,8,9,1,1,8,9,1,1,1,38,38,1,1,1,1,1,38,38,1,1,1,1,1,1,0,1,1,1,1,1,1,9,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,8,9,1,11,8,9,1,11,8,9,1,11,8,9,38,1,38,1,38,38,1,38,38,1,0,1,39,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,31,10,40,41,42,40,41,0,0,37,0,0,0,0,0,0,0,37,0,0,0,37,43,44,45,37,43,44,45,37,43,44,45,10,37,37,43,44,45,31,37,46,45,47,45,40,41,42,37,43,44,45,37,43,44,45,37,43,44,45,48,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[1,1]],[[1,1]],[[1,1]],[1,[[3,[2]]]],[1,[[3,[4]]]],[1,1],[1,[[3,[5]]]],[6,1],[1,1],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],1],[1,1],[[[8,[7]]],[[8,[7]]]],[9,9],[[]],[[]],[[]],0,0,[[],1],[[[11,[10]]]],[8],[8],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[1],[[],12],[[],12],[[],3],[[],3],[[1,13],2],[[1,14],2],[[1,15],2],[[1,16],2],[[1,17],2],[[1,18],2],[[1,19],2],[[1,4],2],[[1,20],2],[[1,21],2],[[1,22],2],[[1,23],2],[[1,24],2],[[1,5],2],[[1,1],2],[[1,2],2],[[1,25],2],[[1,5],2],[[1,6],2],[[1,6],2],[[[8,[26]],8],2],[6],[[],17],[[1,27],28],[[[8,[29]],27],28],[25,1],[[],1],[24,1],[15,1],[[]],[18,1],[5,1],[14,1],[5,1],[6,1],[13,1],[16,1],[17,1],[19,1],[22,1],[4,1],[9,1],[2,1],[23,1],[21,1],[3,1],[20,1],[[]],[[]],[[],9],[[]],[30],[17,1],[[],[[8,[10]]]],[2,1],[4,1],[6,1],[[],1],[[1,1],2],[[1,1],2],[[],2],[[],2],[1,2],[1,2],[6,6],[[]],[[]],[[]],[[]],[1,17],[1,17],[[[8,[31]]]],[9],[1,2],[1,2],[1,2],[[],2],[[],2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[[1,1],2],[1,1],[[1,1],2],[[1,1],2],[[1,1],2],[[],1],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[1],[1],[6,9],[1],[1],[[],1],[[1,1],1],0,[17],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[1,1]],[[[3,[6]]],1],[6,30],[1,30],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],32],[[],32],[[],32],[[],32],[1],[1,1],[1],[1,1],[[]],[[]],[1,4],[[]],[[]],[[],1],[6],[[1,1],17],[[]],0,[[[34,[33]]],1],[[]],[[]],[34],[[34,27],28],[34],[[]],[[]],[34,17],[34,1],[[],34],[[]],[[],34],[[],1],[[],12],[[],12],[[],32],[35,34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[31]]],[[37,[36]]]],[[]],[[]],[[]],[[]],[[]],[[[37,[36]]],[[3,[10]]]],[[],2],0,[[]],0,[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],32],[[],32],[[],32],[[],32],0,0,0,0,0,0],"p":[[3,"JsValue"],[15,"bool"],[4,"Option"],[15,"f64"],[3,"String"],[15,"str"],[8,"Clone"],[3,"Clamped"],[3,"JsError"],[8,"FromWasmAbi"],[3,"JsStatic"],[4,"Result"],[15,"i16"],[15,"u128"],[15,"i32"],[15,"i8"],[15,"u32"],[15,"u16"],[15,"f32"],[15,"i64"],[15,"u64"],[15,"i128"],[15,"u8"],[15,"isize"],[15,"usize"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"never"],[8,"IntoWasmAbi"],[3,"TypeId"],[8,"Sized"],[3,"Closure"],[3,"Box"],[8,"WasmAbi"],[4,"WasmOption"],[8,"JsCast"],[8,"UnwrapThrowExt"],[8,"RefFromWasmAbi"],[8,"RefMutFromWasmAbi"],[8,"ReturnWasmAbi"],[3,"ResultAbi"],[19,"ResultAbiUnion"],[3,"WasmSlice"],[8,"OptionFromWasmAbi"],[8,"OptionIntoWasmAbi"],[13,"Some"]]},\
"wasm_bindgen_backend":{"doc":"A common backend for bindgen crates.","t":[3,8,0,14,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,0,13,13,13,13,13,3,13,3,13,13,3,13,13,3,13,3,3,4,4,4,13,3,3,13,13,13,13,13,4,4,13,13,3,13,4,3,13,13,13,13,13,13,3,3,13,4,4,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,5,11,5,5,5,5,11,11,11,11,5],"n":["Diagnostic","TryToTokens","ast","bail_span","borrow","borrow_mut","err_span","error","fmt","from","from","from_vec","into","panic","span","span_error","spanned_error","to_tokens","try_from","try_into","try_to_token_stream","try_to_token_stream","try_to_tokens","type_id","util","ByMutRef","ByRef","ByValue","ByValue","Constructor","Enum","Enum","Export","ExportArgument","ExportRet","Function","Function","Getter","Import","ImportArgument","ImportEnum","ImportFunction","ImportFunctionKind","ImportKind","ImportModule","ImportRet","ImportStatic","ImportType","IndexingDeleter","IndexingGetter","IndexingSetter","Inline","Method","MethodKind","MethodSelf","Named","Normal","Operation","Operation","OperationKind","Program","RawNamed","RefMutable","RefShared","Regular","Setter","Static","Struct","StructField","Type","TypeKind","TypeLocation","Variant","arguments","assert_no_shim","async","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catch","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","comments","comments","comments","comments","comments","default","doc_comment","doc_comment","enums","eq","eq","exports","extends","fields","fits_on_impl","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function","function","generate_typescript","generate_typescript","generate_typescript","generate_typescript","getter","getter_with_clone","hash","hole","imports","infer_getter_property","infer_setter_property","inline_js","instanceof_shim","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","is_inspectable","is_static","is_type_of","js_class","js_name","js_name","js_name","js_name","js_name","js_namespace","js_ret","kind","kind","kind","method_kind","method_self","module","name","name","name","name_span","no_deref","readonly","renamed_via_js_name","ret","rust_attrs","rust_attrs","rust_class","rust_name","rust_name","rust_name","rust_name","rust_name","rust_name","rust_name","rust_vis","setter","shim","shim","span","span","span","span","span","span","start","struct_name","structs","structural","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_to_tokens","try_to_tokens","try_to_tokens","try_to_tokens","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typescript_custom_sections","typescript_type","value","variadic","variadic","variant_values","variants","variants","vendor_prefixes","vis","vis","vis","class","kind","ty","0","0","0","0","0","0","0","1","1","1","0","0","0","0","ShortHash","borrow","borrow_mut","fmt","fmt","from","ident_ty","into","leading_colon_path_ty","raw_ident","rust_ident","simple_path_ty","to_string","try_from","try_into","type_id","wrap_import_function"],"q":["wasm_bindgen_backend","","","","","","","","","","","","","","","","","","","","","","","","","wasm_bindgen_backend::astwasm_bindgen_backend::ast::ImportFunctionKind","","","wasm_bindgen_backend::ast::ImportKind","","","","wasm_bindgen_backend::ast::ImportModule","","","","","","wasm_bindgen_backend::ast::MethodKind","wasm_bindgen_backend::ast::OperationKind","","wasm_bindgen_backend::util","","","","","","","","","","","","","","","","",""],"d":["A struct representing a diagnostic to emit to the end-user …","A trait for converting AST structs into Tokens and adding …","A representation of the Abstract Syntax Tree of a Rust …","Immediately fail and return an Err, with the arguments …","","","Provide a Diagnostic with the given span and message","Generate a <code>Diagnostic</code> from an informational message with …","","","Returns the argument unchanged.","Attempt to generate a <code>Diagnostic</code> from a vector of other …","Calls <code>U::from(self)</code>.","Immediately trigger a panic from this <code>Diagnostic</code>","","Generate a <code>Diagnostic</code> from a Span and an informational …","Generate a <code>Diagnostic</code> from the span of any tokenizable …","","","","Attempt to convert a <code>Self</code> into a new <code>TokenStream</code>","Attempt to convert a <code>Self</code> into a new <code>TokenStream</code>","Attempt to convert a <code>Self</code> into tokens and add it to the …","","Common utility function for manipulating syn types and …","A by-mutable-reference arg, EG <code>&amp;mut T</code>","A by-reference arg, EG <code>&amp;T</code>","<code>self</code>","A by-value arg, EG <code>T</code>","A class constructor","Information about an Enum being exported","Importing a JS enum","A rust to js interface. Allows interaction with rust …","An exported argument (Rust side type)","An exported return","Information about a function being imported or exported","Importing a function","A method for getting the value of the provided Ident","Things imported from a JS module (in an <code>extern</code> block)","An imported argument (JS side type)","The metadata for an Enum being imported","A function being imported from JS","The type of a function being imported","The type of item being imported","The possible types of module to import from","An imported return","The type of a static being imported","The metadata for a type being imported","A dynamically intercepted deleter","A dynamically intercepted getter","A dynamically intercepted setter","Import from an inline JS snippet","A class method","The type of a method","The 3 types variations of <code>self</code>.","Import from the named module, with relative paths …","A standard function","The operation performed by a class method","Any other kind of method","The kind of operation performed by a method","An abstract syntax tree representing a rust program. …","Import from the named module, without interpreting paths","<code>&amp;mut self</code>","<code>&amp;self</code>","A standard method, nothing special","A method for setting the value of the provided Ident","Importing a static value","Information about a Struct being exported","The field of a struct","Importing a type/class","Unused, the type of an argument to / return from a function","Unused, the location of a type for a function argument …","The variant of an enum","The arguments to the function","Causes the Builder (See cli-support::js::binding::Builder) …","Whether this is an <code>async</code> function","The custom attributes to apply to this type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to catch JS exceptions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comments extracted from the rust source.","The doc comments on this struct, if provided","The doc comments on this field, if any","The doc comments on this enum, if any","The doc comments on this variant, if any","","The doc comment on this import, if one is provided","The doc comment applied to this type, if one exists","rust enums","","","rust -&gt; js interfaces","The list of classes this extends, if any","All the fields of this struct to export","Whether this type can be inside an <code>impl</code> block.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The rust function","The full signature of the function","Whether to generate a typescript definition for this …","Whether to generate a typescript definition for this struct","Whether to generate a typescript definition for this field","Whether to generate a typescript definition for this enum","The name of the getter shim for this field","Whether to use .clone() in the auto-generated getter for …","","The value to use for a <code>none</code> variant of the enum","js -&gt; rust interfaces","If the rust object has a <code>fn xxx(&amp;self) -&gt; MyType</code> method, …","If the rust object has a <code>fn set_xxx(&amp;mut self, MyType)</code> …","Inline JS snippets","The name of the shim to check instanceof for this type","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the Program is empty","Whether this struct is inspectable (provides …","Whether this method is static","The name of the remote function to use for the generated …","The class name in JS this is attached to","The name of this static on the JS side","The name of this type on the JS side","The name of the struct in JS code","The name of the field in JS code","The name of this enum in JS code","The namespace to access the item through, if any","The type being returned","The type of item being imported","The kind of function being imported","The internal kind of this Operation","The kind (static, named, regular)","The type of <code>self</code> (either <code>self</code>, <code>&amp;self</code>, or <code>&amp;mut self</code>)","The type of module being imported from, if any","The Rust enum’s identifiers","The name of the function","The name of this variant","The span of the function’s name in Rust code","If present, don’t generate a <code>Deref</code> impl","Whether this value is read-only to JS","Whether the function has a js_name attribute","The return type of the function, if provided","Attributes to apply to the Rust enum","Any custom attributes being applied to the function","The struct name, in Rust, this is attached to","The name of the rust function/method on the rust side.","The name rust code will use","The name of this static on the Rust side","The name of this type on the Rust side","The name of the struct in Rust code","The name of the field in Rust code","The name of this enum in Rust code","The visibility of this function in Rust","The name of the setter shim for this field","The shim name to use in the generated code. The ‘shim’ …","The name of the shim function used to access this static","","","","","","","Whether or not this function should be flagged as the wasm …","The name of the struct this field is part of","rust structs","Whether the function should use structural type checking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of static being imported","The type of this field","","","","","","","","","","","","","","","","","","","","","","custom typescript sections to be included in the …","The TS definition to generate for this type","The backing value of this variant","Whether the function is variadic on the JS side","Whether this is a function with a variadict parameter","The JS string values of the variants","The Rust identifiers for the variants","The variants provided by this enum","A custom prefix to add and attempt to fall back to, if the …","The visibility of this static in Rust","The visibility of this type in Rust","The Rust enum’s visibility","The name of the class for this method, in JS","The kind of method this is","The type of the class for this method, in Rust","","","","","","","","","","","","","","","Small utility used when generating symbol names.","","","","","Returns the argument unchanged.","Create a path type with a single segment from a given …","Calls <code>U::from(self)</code>.","Create a global path type from the given segments. For …","Create an <code>Ident</code> without checking to see if it conflicts …","Create an <code>Ident</code>, possibly mangling it if it conflicts with …","Create a path type from the given segments. For example an …","","","","","Convert an ImportFunction into the more generic Import …"],"i":[0,0,0,0,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,42,42,42,3,0,33,33,16,33,22,0,19,0,34,34,0,19,24,0,34,0,0,0,0,0,34,0,0,24,24,24,18,21,0,0,18,21,0,22,0,0,18,16,16,24,24,19,0,0,19,0,0,0,28,20,28,26,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,20,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,15,29,30,31,32,14,20,26,14,33,34,14,26,29,19,33,34,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,15,20,28,29,30,31,30,30,18,31,14,28,28,14,26,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,14,29,23,26,15,25,26,29,30,31,17,20,17,20,23,15,15,17,27,28,32,28,26,30,28,28,27,28,15,15,20,25,26,29,30,31,28,30,20,25,25,26,27,29,30,31,15,30,14,20,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,25,26,27,29,30,31,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,14,15,19,20,25,30,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,14,26,32,20,28,27,27,31,26,25,26,27,43,43,43,44,45,46,47,48,49,50,48,49,50,51,52,53,38,0,38,38,38,38,38,0,38,0,0,0,0,38,38,38,38,0],"f":[0,0,0,0,[[]],[[]],0,[[[2,[1]]],3],[[3,4],5],[6,3],[[]],[[[7,[3]]],[[8,[3]]]],[[]],[3,9],[[],10],[[10,[2,[1]]],3],[[11,[2,[1]]],3],[[3,12]],[[],8],[[],8],[[],[[8,[12,3]]]],[[],[[8,[12,3]]]],[12,[[8,[3]]]],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],14],0,0,0,[[33,33],35],[[34,34],35],0,0,0,[19,35],[[33,4],5],[[34,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[18],0,0,[28,36],[28,[[8,[1,3]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[25,12]],[[26,12]],[[27,12]],[[29,12]],[[30,12]],[[31,12]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[14,12],[[8,[3]]]],[[15,12],[[8,[3]]]],[[19,12],[[8,[3]]]],[[20,12],[[8,[3]]]],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[38,[37]],4],5],[[[38,[39]],4],5],[[]],[40,41],[[]],[[],41],[36,40],[36,40],[[],41],[[],1],[[],8],[[],8],[[],13],[20,17]],"p":[[3,"String"],[8,"Into"],[3,"Diagnostic"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Vec"],[4,"Result"],[15,"never"],[3,"Span"],[8,"ToTokens"],[3,"TokenStream"],[3,"TypeId"],[3,"Program"],[3,"Export"],[4,"MethodSelf"],[3,"Import"],[4,"ImportModule"],[4,"ImportKind"],[3,"ImportFunction"],[4,"ImportFunctionKind"],[4,"MethodKind"],[3,"Operation"],[4,"OperationKind"],[3,"ImportStatic"],[3,"ImportType"],[3,"ImportEnum"],[3,"Function"],[3,"Struct"],[3,"StructField"],[3,"Enum"],[3,"Variant"],[4,"TypeKind"],[4,"TypeLocation"],[15,"bool"],[15,"str"],[8,"Hash"],[3,"ShortHash"],[8,"Debug"],[3,"Ident"],[4,"Type"],[8,"TryToTokens"],[13,"Method"],[13,"Function"],[13,"Static"],[13,"Type"],[13,"Enum"],[13,"Named"],[13,"RawNamed"],[13,"Inline"],[13,"Operation"],[13,"Getter"],[13,"Setter"]]},\
"wasm_bindgen_macro":{"doc":"","t":[23,23],"n":["__wasm_bindgen_class_marker","wasm_bindgen"],"q":["wasm_bindgen_macro",""],"d":["",""],"i":[0,0],"f":[0,0],"p":[]},\
"wasm_bindgen_macro_support":{"doc":"This crate contains the part of the implementation of the …","t":[3,12,11,11,11,5,5,11,11,11,11,11,11],"n":["BindgenAttrs","attrs","borrow","borrow_mut","default","expand","expand_class_marker","from","into","parse","try_from","try_into","type_id"],"q":["wasm_bindgen_macro_support","","","","","","","","","","","",""],"d":["Parsed attributes from a <code>#[wasm_bindgen(..)]</code>.","List of parsed attributes","","","","Takes the parsed input from a <code>#[wasm_bindgen]</code> macro and …","Takes the parsed input from a <code>#[wasm_bindgen]</code> macro and …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","",""],"i":[0,1,1,1,1,0,0,1,1,1,1,1,1],"f":[0,0,[[]],[[]],[[],1],[[2,2],[[4,[2,3]]]],[[2,2],[[4,[2,3]]]],[[]],[[]],[5,[[6,[1]]]],[[],4],[[],4],[[],7]],"p":[[3,"BindgenAttrs"],[3,"TokenStream"],[3,"Diagnostic"],[4,"Result"],[6,"ParseStream"],[6,"Result"],[3,"TypeId"]]},\
"wasm_bindgen_shared":{"doc":"","t":[17,5,5,5,14,5,5,5,5],"n":["SCHEMA_VERSION","free_function","free_function_export_name","new_function","shared_api","struct_field_get","struct_field_set","struct_function_export_name","version"],"q":["wasm_bindgen_shared","","","","","","","",""],"d":["","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0],"f":[0,[1,2],[1,2],[1,2],0,[[1,1],2],[[1,1],2],[[1,1],2],[[],2]],"p":[[15,"str"],[3,"String"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
